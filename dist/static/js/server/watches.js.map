{"version":3,"sources":["watches.ts"],"names":["ConfigWatch","FileWatcher","change","event","file","cfg","AppConfig","getInstance","log","Logger","read","info","CssWatch","dirProject","options","sass","dirs","source","SassUtils","getOutputDir","SassWatch","session","SessionVars","add","ProcessingTypes","startsWith","compile","status","FileStatus","setSoure","setTarget","compileFile","JsWatch","isTypescript","javascript","output","compiler","typescript","JavascriptUtils","bundle"],"mappings":"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","sourcesContent":["import { basename, extname, join } from \"path\";\nimport { cp } from \"shelljs\";\nimport { FileWatcher, FileStatus, Logger } from \"../lib\";\nimport { AppConfig } from \"../lib/config\";\nimport { compileFile } from \"../local/babel\";\nimport { JavascriptUtils } from \"../local/javascript\";\nimport { SassUtils } from \"../local/styling\";\nimport { ProcessingTypes, SessionVars } from \"../sys/session\";\n\nexport class ConfigWatch extends FileWatcher {\n\tstatic instance: ConfigWatch;\n\n\tpublic change(event: string, file: string): void {\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance();\n\t\tevent; // Fool compiler - unused variable\n\t\tfile;\n\t\tcfg.read();\n\t\tlog.info(`- config.json changed and reloaded`);\n\t}\n}\n\nexport class CssWatch extends FileWatcher {\n\tstatic instance: CssWatch;\n\n\tpublic change(event: string, file: string): void {\n\t\tevent; // Fool compiler - unused variable\n\t\tif (extname(file) != \".css\") {\n\t\t\treturn;\n\t\t}\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance();\n\t\tlog.info(`- ${file} changed`);\n\t\tcp(join(cfg.dirProject, cfg.options.sass.dirs.source, file), SassUtils.getOutputDir());\n\t}\n}\n\nexport class SassWatch extends FileWatcher {\n\tstatic instance: SassWatch;\n\n\tpublic change(event: string, file: string): void {\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance();\n\t\tevent; // Fool compiler - unused variable\n\t\tif (extname(file) != \".scss\") {\n\t\t\treturn;\n\t\t}\n\t\tlog.info(`- ${file} changed`);\n\n\t\tlet session = SessionVars.getInstance();\n\t\tsession.add(ProcessingTypes.sass, file);\n\n\t\tif (basename(file, \".scss\").startsWith(\"_\")) {\n\t\t\t// Mixin, compile everything\n\t\t\tSassUtils.compile(true);\n\t\t} else {\n\t\t\tlet status = new FileStatus(join(cfg.dirProject, cfg.options.sass.dirs.source));\n\t\t\tstatus.setSoure(file, \".scss\");\n\t\t\tstatus.setTarget(SassUtils.getOutputDir(), \".css\");\n\t\t\tSassUtils.compileFile(status);\n\t\t}\n\t}\n}\n\nexport class JsWatch extends FileWatcher {\n\tstatic instance: JsWatch;\n\n\tpublic change(event: string, file: string): void {\n\t\tevent; // Fool compiler - unused variable\n\t\tif (extname(file) != \".js\" && extname(file) != \".ts\") {\n\t\t\treturn;\n\t\t}\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance();\n\t\tlog.info(`- ${file} changed`);\n\n\t\tlet isTypescript = extname(file) == \".ts\";\n\t\tlet status = new FileStatus(join(cfg.dirProject, cfg.options.javascript.dirs.source));\n\t\tstatus.setSoure(file, isTypescript ? \".ts\" : \".js\");\n\t\tstatus.setTarget(join(cfg.dirProject, cfg.options.javascript.dirs.output), \".js\");\n\n\t\tswitch (cfg.options.javascript.compiler) {\n\t\t\tcase \"\":\n\t\t\t\tcp(\n\t\t\t\t\tjoin(cfg.dirProject, cfg.options.javascript.dirs.source, file),\n\t\t\t\t\tjoin(cfg.dirProject, cfg.options.javascript.dirs.output, file)\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\tlet session = SessionVars.getInstance();\n\t\t\t\tsession.add(isTypescript ? ProcessingTypes.typescript : ProcessingTypes.javascript, file);\n\t\t\t\tcompileFile(status, true);\n\t\t\t\tJavascriptUtils.bundle();\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"]}