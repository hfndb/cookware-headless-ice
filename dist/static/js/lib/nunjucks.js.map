{"version":3,"sources":["nunjucks.ts"],"names":["nunjucks","require","CacheItem","constructor","dir","file","stripFoundTags","template","rawData","FileUtils","readFile","NunjucksUtils","setExtends","trimBegin","trimEnd","setVariable","name","value","type","JSON","stringify","console","log","setBlock","closingTrimBegin","closingTrimEnd","getEnvironment","searchPaths","cfg","AppConfig","getInstance","env","configure","options","dependencies","config","i","length","loaders","push","getSearchPaths","html","dirs","templates","dirProject","includes","readExtends","item","Logger","regex","RegExp","result","exec","exists","fname","extends","warn","replace","trim","readIncludes","lm","getLastModified","readBlocks","blocks","readVariables","val","substr","parse","eval","variables","renderFile","context","templateDir","concat","data","renderString","err","error2string","getCacheIdx","cache","isChanged","lastModified","changed","idx","changedExtends","debug","tmp","Object","assign","info","getUserData","opts","undefined","inclIncludes"],"mappings":"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","sourcesContent":["import { join } from \"path\";\nimport { test } from \"shelljs\";\nimport { AppConfig } from \"./config\";\nimport { FileUtils } from \"./files\";\nimport { Logger } from \"./log\";\nconst nunjucks = require(\"nunjucks\");\n\ninterface readOptions {\n\tdebug?: boolean;\n\tinclIncludes?: boolean;\n\tstripFoundTags?: boolean;\n}\n\n/**\n * Structure for items in cache. Parent, template and includes filled with arrays [dir, file]\n */\nclass CacheItem {\n\tblocks: any[] = [];\n\tchangedExtends: string = \"\";\n\tincludes: any[] = [];\n\tlastModified: number = 0;\n\textends: any[] = [];\n\trawData: string = \"\";\n\tstripFoundTags: boolean;\n\ttemplate: any[];\n\tvariables: any[] = [];\n\n\tconstructor(dir: string, file: string, stripFoundTags: boolean) {\n\t\tthis.template = [\n\t\t\tdir,\n\t\t\tfile\n\t\t];\n\t\tthis.rawData = FileUtils.readFile(join(dir, file));\n\t\tthis.stripFoundTags = stripFoundTags;\n\t}\n}\n\n/**\n * Class to analyze or gather info for a template file\n */\nexport class NunjucksUtils {\n\tcache: CacheItem[] = [];\n\tdebug: boolean = false;\n\n\t/**\n\t * Sets a template (extends)\n\t */\n\tstatic setExtends(template: string, trimBegin: boolean = false, trimEnd: boolean = false): string {\n\t\treturn `{%${trimBegin ? \"- \" : \"\"} extends \"${template}\" ${trimEnd ? \" -\" : \"\"}%}\\n`;\n\t}\n\n\t/**\n\t * Sets a template variable\n\t *\n\t * @param string type Can be boolean,  number, object, string\n\t */\n\tstatic setVariable(\n\t\tname: string,\n\t\tvalue: any,\n\t\ttype: string,\n\t\ttrimBegin: boolean = false,\n\t\ttrimEnd: boolean = false\n\t): string {\n\t\tswitch (type) {\n\t\t\tcase \"boolean\":\n\t\t\t\tvalue = value ? \"true\" : \"false\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"number\":\n\t\t\t\tbreak;\n\n\t\t\tcase \"object\":\n\t\t\t\tvalue = JSON.stringify(value, null, \"\\t\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"string\":\n\t\t\t\tvalue = `\"${value}\"`;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.log(`Unknown type ${type} for variable ${name} received in NunjucksUtils.setVariable()`);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn `{% set${trimBegin ? \"- \" : \"\"} ${name} = ${value} ${trimEnd ? \" -\" : \"\"}%}\\n`;\n\t}\n\n\t/**\n\t * Sets a template block\n\t */\n\tstatic setBlock(\n\t\tname: string,\n\t\tvalue: string,\n\t\ttrimBegin: boolean = false,\n\t\ttrimEnd: boolean = false,\n\t\tclosingTrimBegin: boolean = false,\n\t\tclosingTrimEnd: boolean = false\n\t): string {\n\t\treturn `{%${trimBegin ? \"- \" : \"\"} block ${name} ${trimEnd ? \" -\" : \"\"}%}\n${value}\n{%${closingTrimBegin ? \"- \" : \"\"} endblock ${closingTrimEnd ? \" -\" : \"\"}%}\\n`;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic getEnvironment(searchPaths: string[]): any {\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet env = nunjucks.configure(searchPaths[0], cfg.options.dependencies.nunjucks.config);\n\t\tfor (let i = 1; i < searchPaths.length; i++) {\n\t\t\tenv.loaders[0].searchPaths.push(searchPaths[i]);\n\t\t}\n\t\treturn env;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic getSearchPaths(): string[] {\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet searchPaths: string[] = [];\n\n\t\tfor (let i = 0; i < cfg.options.html.dirs.templates.length; i++) {\n\t\t\tsearchPaths.push(join(cfg.dirProject, cfg.options.html.dirs.templates[i]));\n\t\t}\n\n\t\tfor (let i = 0; i < cfg.options.html.dirs.includes.length; i++) {\n\t\t\tsearchPaths.push(join(cfg.dirProject, cfg.options.html.dirs.includes[i]));\n\t\t}\n\n\t\treturn searchPaths;\n\t}\n\n\t/**\n\t * Sets item.extends\n\t *\n\t * @private\n\t */\n\tstatic readExtends(item: CacheItem, searchPaths: string[]): void {\n\t\tlet log = Logger.getInstance();\n\t\tlet regex = new RegExp('{%([-\\\\s]+)extends\\\\s*\"(.*)\"([-\\\\s]+)%}', \"gim\"); // Global, case insensitive, multiline\n\t\tlet result = null;\n\t\twhile ((result = regex.exec(item.rawData)) !== null) {\n\t\t\tlet exists = false;\n\t\t\t// result: idx 0 full string, 1 \"-\" or empty string, 2 file name, 3 \"-\" or empty string\n\t\t\tlet fname = result[2];\n\t\t\tfor (let i = 0; i < searchPaths.length; i++) {\n\t\t\t\tif (test(\"-f\", join(searchPaths[i], fname))) {\n\t\t\t\t\texists = true;\n\t\t\t\t\titem.extends = [\n\t\t\t\t\t\tsearchPaths[i],\n\t\t\t\t\t\tfname\n\t\t\t\t\t];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!exists) {\n\t\t\t\tlog.warn(`File ${item.template[1]} extends non-existing file ${fname}`);\n\t\t\t}\n\t\t}\n\n\t\tif (item.stripFoundTags) {\n\t\t\titem.rawData = item.rawData.replace(regex, \"\").trim();\n\t\t}\n\t}\n\n\t/**\n\t * <p>\n\t *   Adds arrays to item.includes[] with elements:<br>\n\t *   - 0 include name<br>\n\t *   - 1 include file name<br>\n\t *   - 2 time stamp last modified\n\t * </p>\n\t *\n\t * @private\n\t */\n\tstatic readIncludes(item: CacheItem, searchPaths: string[]): void {\n\t\tlet log = Logger.getInstance();\n\t\tlet regex = new RegExp('{%([-\\\\s]+)include\\\\s*\"(.*)\"([-\\\\s]+)%}', \"gim\"); // Global, case insensitive, multiline\n\t\tlet result = null;\n\n\t\twhile ((result = regex.exec(item.rawData)) !== null) {\n\t\t\tlet exists = false;\n\t\t\t// result:\n\t\t\t// 0 full string\n\t\t\t// 1 \"-\" or empty string\n\t\t\t// 2 file name\n\t\t\t// 3 \"-\" or empty string\n\t\t\tlet fname = result[2];\n\t\t\tfor (let i = 0; i < searchPaths.length; i++) {\n\t\t\t\tif (!test(\"-f\", join(searchPaths[i], fname))) continue;\n\t\t\t\texists = true;\n\t\t\t\tlet lm = FileUtils.getLastModified(searchPaths[i], fname);\n\t\t\t\t// Assuming include doesn't extend any other template\n\t\t\t\titem.includes.push([\n\t\t\t\t\tsearchPaths[i],\n\t\t\t\t\tfname,\n\t\t\t\t\tlm\n\t\t\t\t]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!exists) {\n\t\t\t\tlog.warn(`File ${item.template[1]} contains non-existing include ${fname}`);\n\t\t\t}\n\t\t}\n\n\t\tif (item.stripFoundTags) {\n\t\t\titem.rawData = item.rawData.replace(regex, \"\").trim();\n\t\t}\n\t}\n\n\t/**\n\t * <p>\n\t *   Adds arrays to item.blocks[] with elements:<br>\n\t *   - 0 block name<br>\n\t *   - 1 block content<br>\n\t *   - 2 trimming while opening {%- block blockname %}\n\t *   - 3 trimming while closing {% block blockname -%}\n\t *   - 4 trimming while opening {%- endblock %}\n\t *   - 5 trimming while closing {% endblock -%}\n\t * </p>\n\t *\n\t * @private\n\t */\n\tstatic readBlocks(item: CacheItem): void {\n\t\tlet regex = new RegExp(\"{%([-\\\\s]+)block\\\\s*(\\\\w*?)([-\\\\s]+)%}([^]*?){%([-\\\\s]+)endblock\\\\s*([-\\\\s]+)%}\", \"gim\");\n\t\t// Global, case insensitive, multiline\n\t\tlet result = null;\n\n\t\twhile ((result = regex.exec(item.rawData)) !== null) {\n\t\t\t// result:\n\t\t\t// 0 full string\n\t\t\t// 1 \"-\" or empty string (start block, trimming begin)\n\t\t\t// 2 block name\n\t\t\t// 3 \"-\" or empty string  (start block, trimming end)\n\t\t\t// 4 block content - with a leading and trailing \\n\n\t\t\t// 5 \"-\" or empty string (end block, trimming begin)\n\t\t\t// 6 \"-\" or empty string (end block, trimming end)\n\n\t\t\titem.blocks.push([\n\t\t\t\tresult[2],\n\t\t\t\tresult[4].trim(),\n\t\t\t\tresult[1].trim().length > 0,\n\t\t\t\tresult[3].trim().length > 0,\n\t\t\t\tresult[5].trim().length > 0,\n\t\t\t\tresult[6].trim().length > 0\n\t\t\t]);\n\t\t}\n\n\t\tif (item.stripFoundTags) {\n\t\t\titem.rawData = item.rawData.replace(regex, \"\").trim();\n\t\t}\n\t}\n\n\t/**\n\t * <p>\n\t *   Adds arrays to item.variables[] with elements:<br>\n\t *   - 0 variable name<br>\n\t *   - 1 variable value<br>\n\t *   - 2 trimming while opening {%- set varname = varvalue %}\n\t *   - 3 trimming while closing {% set varname = varvalue -%}\n\t * </p>\n\t *\n\t * @private\n\t */\n\tstatic readVariables(item: CacheItem): void {\n\t\tlet regex = new RegExp(\"{%([-\\\\s]+)set\\\\s*(\\\\w*?)\\\\s*=\\\\s*([^]*?)([-\\\\s]+)%}\", \"gim\"); // Global, case insensitive, multiline\n\t\t// https://stackoverflow.com/questions/1979884/how-to-use-javascript-regex-over-multiple-lines\n\t\t// https://stackoverflow.com/questions/1387116/matching-multiline-patterns\n\t\tlet result = null;\n\n\t\twhile ((result = regex.exec(item.rawData)) !== null) {\n\t\t\t// result:\n\t\t\t// 0 full string\n\t\t\t// 1 \"-\" or empty string (trimming)\n\t\t\t// 2 variable name\n\t\t\t// 3 variable value\n\t\t\t// 4 \"-\" or empty string (trimming)\n\t\t\tlet val = result[3].substr(0, 1) == \"{\" ? JSON.parse(result[3]) : eval(result[3]);\n\t\t\titem.variables.push([\n\t\t\t\tresult[2],\n\t\t\t\tval,\n\t\t\t\tresult[1].trim().length > 0,\n\t\t\t\tresult[4].trim().length > 0\n\t\t\t]);\n\t\t}\n\n\t\tif (item.stripFoundTags) {\n\t\t\titem.rawData = item.rawData.replace(regex, \"\").trim();\n\t\t}\n\t}\n\n\t/**\n\t * Render a content file to a string\n\t */\n\tstatic renderFile(dir: string, file: string, context: Object, templateDir: string): string {\n\t\tlet log = Logger.getInstance();\n\t\tlet searchPaths = [];\n\t\tif (templateDir) searchPaths.push(templateDir);\n\t\tsearchPaths = searchPaths.concat(NunjucksUtils.getSearchPaths());\n\n\t\ttry {\n\t\t\tNunjucksUtils.getEnvironment(searchPaths);\n\t\t\tlet data = FileUtils.readFile(join(dir, file));\n\t\t\treturn nunjucks.renderString(data, context);\n\t\t} catch (err) {\n\t\t\tlog.warn(`- Failed to render file ${file}`, Logger.error2string(err));\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\t/**\n\t * Get index of file in cache. If not in cache yet... cache the file\n\t */\n\tgetCacheIdx(dir: string, file: string, readIncludes: boolean = false, stripFoundTags: boolean = false): number {\n\t\tfor (let i = 0; i < this.cache.length; i++) {\n\t\t\tif (this.cache[i].template[1] == file) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\tlet item = new CacheItem(dir, file, stripFoundTags);\n\t\tlet searchPaths = NunjucksUtils.getSearchPaths();\n\n\t\tNunjucksUtils.readExtends(item, searchPaths);\n\t\tif (readIncludes) NunjucksUtils.readIncludes(item, searchPaths);\n\n\t\tthis.cache.push(item);\n\n\t\treturn this.cache.length - 1;\n\t}\n\n\t/**\n\t * See if a template file needs an update\n\t */\n\tisChanged(dir: string, file: string, lastModified?: number): boolean {\n\t\tlet log = Logger.getInstance();\n\t\tlet changed = false;\n\n\t\tif (!lastModified) {\n\t\t\tlastModified = FileUtils.getLastModified(dir, file);\n\t\t}\n\n\t\tlet idx = this.getCacheIdx(dir, file, true);\n\t\tlet item = this.cache[idx];\n\t\titem.lastModified = FileUtils.getLastModified(dir, file);\n\n\t\twhile (!changed && item.extends[1]) {\n\t\t\t// Current item\n\t\t\tif (item.lastModified > lastModified) {\n\t\t\t\tthis.cache[idx].changedExtends = item.template[1];\n\t\t\t\tchanged = true; // Parent has changed after requested template\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Used includes\n\t\t\tfor (let i = 0; !changed && i < item.includes.length; i++) {\n\t\t\t\tif (item.includes[i][2] > lastModified) {\n\t\t\t\t\tthis.cache[idx].changedExtends = item.includes[i][1];\n\t\t\t\t\tchanged = true; // Some include has changed after requested template\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Go to parent\n\t\t\tif (!changed) {\n\t\t\t\tlet i = this.getCacheIdx(item.extends[0], item.extends[1]);\n\t\t\t\titem = this.cache[i];\n\t\t\t}\n\t\t}\n\n\t\tif (changed && this.debug) {\n\t\t\tlet tmp = Object.assign({}, item);\n\t\t\tdelete tmp.rawData;\n\t\t\tlog.info(`Info collected about changed file ${file}: `, tmp);\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Retrieve parent, variables and blocks from file\n\t */\n\tgetUserData(dir: string, file: string, opts?: readOptions): CacheItem {\n\t\t// Defaults\n\t\tif (opts == undefined) opts = {};\n\t\tif (opts.debug != undefined) this.debug = opts.debug;\n\t\tif (opts.inclIncludes == undefined) opts.inclIncludes = false;\n\t\tif (opts.stripFoundTags == undefined) opts.stripFoundTags = false;\n\n\t\tlet log = Logger.getInstance();\n\t\tlet idx = this.getCacheIdx(dir, file, opts.inclIncludes, opts.stripFoundTags);\n\t\tlet item = this.cache[idx];\n\n\t\tNunjucksUtils.readBlocks(item);\n\t\tNunjucksUtils.readVariables(item);\n\n\t\tlet tmp = Object.assign({}, item);\n\t\tif (!opts.stripFoundTags) {\n\t\t\tdelete tmp.rawData;\n\t\t}\n\n\t\tif (this.debug) {\n\t\t\tlog.info(\"User data\", tmp);\n\t\t}\n\n\t\treturn tmp;\n\t}\n}\n\n/*\n\nTest: see nunjucks-test.ts\n\nFor playground:\n\nimport { join } from \"path\";\nimport { AppConfig, Logger } from \"../lib\";\nimport { NunjucksUtils } from \"../lib/nunjucks\";\n\n\tlet contentDir = join(cfg.dirProject, cfg.options.html.dirs.content, \"test-pages/nunjucks\");\n\tlet nj = new NunjucksUtils();\n\tnj.debug = true;\n\tlet files = [\n\t\t\"index.html\"\n\t];\n\n\t// Put test templates in search path\n\tcfg.options.html.dirs.templates = [\n\t\tjoin(cfg.options.html.dirs.content, \"test-pages/nunjucks\")\n\t].concat(cfg.options.html.dirs.templates);\n\n\tif (!nj.isChanged(contentDir, files[0])) {\n\t\tlog.info(`No changes for file ${files[0]}`);\n\t}\n\n\tlet result = nj.getUserData(contentDir, files[0]);\n\n*/\n"]}