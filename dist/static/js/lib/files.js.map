{"version":3,"sources":["files.ts"],"names":["FileUtils","readJsonFile","path","ignoreErrors","parsed","file","log","Logger","getInstance","warn","data","readFile","JSON","parse","err","console","error","error2string","Error","writeJsonFile","content","dir","verbose","stringify","writeFile","process","env","NODE_ENV","info","ENCODING_UTF8","flag","fullPath","dir4sure","mkdir","encoding","getFileList","opts","allowedExtensions","undefined","excludeList","recursive","files","addFile","substr","length","includes","push","addPath","dirname","forEach","realpath","lst","Map","src","i","entry","bytes","size","lastModified","mtime","lastModifiedMs","mtimeMs","type","needsAction","set","getLastModified","getLastChangeInDirectory","extensions","startAt","retVal","Math","max","getUniqueFileName","ext","orgFile","toString","padStart","searchInFile","searchFor","regex","RegExp","ignoreCase","markFound","replace","lr","LineReader","lineNr","line","next","matched","match","inverse","processor","touchRecursive","FileWatcher","constructor","workingDir","projectDir","timeout","description","addWatch","isDir","watchers","persistent","event","filename","nowChanging","recycle","indexOf","setTimeout","change","stop","watcher","close","removeObsolete","processed","outputDir","active","cfg","AppConfig","options","logging","sources","ArrayUtils","inExcludeList","exclude","trashFile","dirTemp","reader","initialize","lineByLine","require"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAoCO,MAAMA,SAAN,CAAgB;AAStB,SAAOC,YAAP,CAAoBC,IAApB,EAAkCC,YAAqB,GAAG,IAA1D,EAAwE;AACvE,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,IAAI,GAAG,oBAASH,IAAT,CAAX;;AACA,QAAI,CAAC,mBAAK,IAAL,EAAWA,IAAX,CAAL,EAAuB;AACtB,UAAII,GAAG,GAAGC,YAAOC,WAAP,EAAV;;AACAF,MAAAA,GAAG,CAACG,IAAJ,CAAU,QAAOJ,IAAK,2BAA0B,mBAAQH,IAAR,CAAc,EAA9D;AACA,aAAO,EAAP;AACA;;AACD,QAAIQ,IAAI,GAAGV,SAAS,CAACW,QAAV,CAAmBT,IAAnB,CAAX;;AAEA,QAAIQ,IAAJ,EAAU;AACT,UAAI;AACHN,QAAAA,MAAM,GAAGQ,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAT;AACA,OAFD,CAEE,OAAOI,GAAP,EAAY;AACbC,QAAAA,OAAO,CAACC,KAAR,CAAe,iBAAgBd,IAAK,IAApC,EAAyCK,YAAOU,YAAP,CAAoBH,GAApB,CAAzC;AACAC,QAAAA,OAAO,CAACC,KAAR,CAAe;;;CAAf;AAIA;AACD,KAVD,MAUO,IAAI,CAACb,YAAL,EAAmB,MAAM,IAAIe,KAAJ,CAAW,gCAA+Bb,IAAK,EAA/C,CAAN;;AAE1B,WAAOD,MAAP;AACA;;AAQD,SAAOe,aAAP,CAAqBC,OAArB,EAAsCC,GAAtC,EAAmDhB,IAAnD,EAAiEiB,OAAgB,GAAG,IAApF,EAAgG;AAC/F,QAAIZ,IAAI,GAAGE,IAAI,CAACW,SAAL,CAAeH,OAAf,EAAwB,IAAxB,EAA8B,IAA9B,CAAX;;AACA,QAAId,GAAG,GAAGC,YAAOC,WAAP,EAAV;;AAEA,QAAIR,SAAS,CAACwB,SAAV,CAAoBH,GAApB,EAAyBhB,IAAzB,EAA+BK,IAA/B,EAAqC,KAArC,KAA+CY,OAA/C,IAA0DG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAvF,EAA+F;AAC9FrB,MAAAA,GAAG,CAACsB,IAAJ,CAAU,wBAAuBvB,IAAK,EAAtC;AACA;AACD;;AAKD,SAAOM,QAAP,CAAgBT,IAAhB,EAAsC;AACrC,QAAIQ,IAAI,GAAG,EAAX;;AACA,QAAI;AACHA,MAAAA,IAAI,GAAG,sBAAaR,IAAb,EAAmBF,SAAS,CAAC6B,aAA7B,CAAP;AACA,KAFD,CAEE,OAAOf,GAAP,EAAY;AACb,UAAIR,GAAG,GAAGC,YAAOC,WAAP,EAAV;;AACAF,MAAAA,GAAG,CAACU,KAAJ,CAAW,iBAAgBd,IAAK,EAAhC,EAAmCK,YAAOU,YAAP,CAAoBH,GAApB,CAAnC;AACA,YAAMA,GAAN;AACA;;AACD,WAAOJ,IAAP;AACA;;AAKD,SAAOc,SAAP,CAAiBH,GAAjB,EAA8BhB,IAA9B,EAA4Ce,OAA5C,EAA6DE,OAA7D,EAA+EQ,IAAY,GAAG,GAA9F,EAA4G;AAC3G,QAAIxB,GAAG,GAAGC,YAAOC,WAAP,EAAV;;AACA,QAAIuB,QAAQ,GAAG,gBAAKV,GAAL,EAAUhB,IAAV,CAAf;AACA,QAAI2B,QAAQ,GAAG,mBAAQD,QAAR,CAAf;;AAEA,QAAIC,QAAQ,IAAI,CAAC,mBAAK,IAAL,EAAWA,QAAX,CAAjB,EAAuC;AACtChC,MAAAA,SAAS,CAACiC,KAAV,CAAgBD,QAAhB;AACA;;AAED,QAAI;AACH,6BAAcD,QAAd,EAAwBX,OAAxB,EAAiC;AAChCc,QAAAA,QAAQ,EAAElC,SAAS,CAAC6B,aADY;AAEhCC,QAAAA,IAAI,EAAEA;AAF0B,OAAjC;;AAIA,UAAIR,OAAO,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAxC,EAAgD;AAC/CrB,QAAAA,GAAG,CAACsB,IAAJ,CAAU,mBAAkBvB,IAAK,EAAjC;AACA;AACD,KARD,CAQE,OAAOS,GAAP,EAAY;AACbR,MAAAA,GAAG,CAACU,KAAJ,CAAW,0BAAyBe,QAAS,EAA7C,EAAgDxB,YAAOU,YAAP,CAAoBH,GAApB,CAAhD;AACA,YAAMA,GAAN;AACA;;AACD,WAAO,IAAP;AACA;;AAOD,SAAOqB,WAAP,CAAmBjC,IAAnB,EAAiCkC,IAAqB,GAAG,EAAzD,EAAuE;AACtE,QAAI,CAAC,mBAAK,IAAL,EAAWlC,IAAX,CAAL,EAAuB;AACtB,YAAM,IAAIgB,KAAJ,CAAU,UAAUhB,IAAV,GAAiB,gBAA3B,CAAN;AACA;;AAED,QAAImC,iBAAiB,GAAGD,IAAI,CAACC,iBAAL,IAA0BC,SAA1B,GAAsC,EAAtC,GAA2CF,IAAI,CAACC,iBAAxE;AACA,QAAIE,WAAW,GAAGH,IAAI,CAACG,WAAL,IAAoBD,SAApB,GAAgC,EAAhC,GAAqCF,IAAI,CAACG,WAA5D;AACA,QAAIC,SAAS,GAAGJ,IAAI,CAACI,SAAL,IAAkBF,SAAlB,GAA8B,IAA9B,GAAqCF,IAAI,CAACI,SAA1D;AACA,QAAIC,KAAe,GAAG,EAAtB;;AAEA,aAASC,OAAT,CAAiBrC,IAAjB,EAA+B;AAC9BA,MAAAA,IAAI,GAAGA,IAAI,CAACsC,MAAL,CAAYzC,IAAI,CAAC0C,MAAL,GAAc,CAA1B,CAAP;AACA,UAAIL,WAAW,CAACM,QAAZ,CAAqBxC,IAArB,CAAJ,EAAgC;;AAChC,UAAIgC,iBAAiB,CAACO,MAAlB,IAA4B,CAA5B,IAAiCP,iBAAiB,CAACQ,QAAlB,CAA2B,mBAAQxC,IAAR,CAA3B,CAArC,EAAgF;AAC/EoC,QAAAA,KAAK,CAACK,IAAN,CAAWzC,IAAX;AACA;AACD;;AACD,aAAS0C,OAAT,CAAiBC,OAAjB,EAAkC;AACjC,UAAIT,WAAW,CAACM,QAAZ,CAAqB,oBAASG,OAAT,CAArB,CAAJ,EAA6C;AAE7C,2BAAYA,OAAZ,EAAqBC,OAArB,CAA8B5C,IAAD,IAAkB;AAC9C,cAAM6C,QAAQ,GAAG,gBAAKF,OAAL,EAAc3C,IAAd,CAAjB;;AACA,YAAImC,SAAS,IAAI,mBAAK,IAAL,EAAWU,QAAX,CAAjB,EAAuC;AACtCH,UAAAA,OAAO,CAACG,QAAD,CAAP;AACA,SAFD,MAEO,IAAI,mBAAK,IAAL,EAAWA,QAAX,CAAJ,EAA0B;AAChCR,UAAAA,OAAO,CAACQ,QAAD,CAAP;AACA;AACD,OAPD;AAQA;;AAED,QAAI,mBAAK,IAAL,EAAWhD,IAAX,CAAJ,EAAsB;AACrBwC,MAAAA,OAAO,CAACxC,IAAD,CAAP;AACA,KAFD,MAEO;AACN6C,MAAAA,OAAO,CAAC7C,IAAD,CAAP;AACA;;AAED,WAAOuC,KAAP;AACA;;AAMD,SAAOpB,GAAP,CAAWnB,IAAX,EAAyBsC,SAAkB,GAAG,KAA9C,EAA6E;AAC5E,QAAIW,GAAG,GAAG,IAAIC,GAAJ,EAAV;AACA,QAAIC,GAAG,GAAGrD,SAAS,CAACmC,WAAV,CAAsBjC,IAAtB,EAA4B;AAAEsC,MAAAA,SAAS,EAAEA;AAAb,KAA5B,CAAV;;AAEA,SAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACT,MAAxB,EAAgCU,CAAC,EAAjC,EAAqC;AACpC,UAAIjD,IAAI,GAAGgD,GAAG,CAACC,CAAD,CAAd;AACA,UAAIvB,QAAQ,GAAG,gBAAK7B,IAAL,EAAWG,IAAX,CAAf;AACA,UAAIuB,IAAI,GAAG,kBAASG,QAAT,CAAX;AACA,UAAIwB,KAAgB,GAAG;AACtBC,QAAAA,KAAK,EAAE5B,IAAI,CAAC6B,IADU;AAEtB1B,QAAAA,QAAQ,EAAEA,QAFY;AAGtB2B,QAAAA,YAAY,EAAE9B,IAAI,CAAC+B,KAHG;AAItBC,QAAAA,cAAc,EAAEhC,IAAI,CAACiC,OAJC;AAKtBC,QAAAA,IAAI,EAAE,mBAAQzD,IAAR,CALgB;AAMtB0D,QAAAA,WAAW,EAAE;AANS,OAAvB;AAQAZ,MAAAA,GAAG,CAACa,GAAJ,CAAQ3D,IAAR,EAAckD,KAAd;AACA;;AAED,WAAOJ,GAAP;AACA;;AAKD,SAAOc,eAAP,CAAuB/D,IAAvB,EAAqCG,IAArC,EAA2D;AAC1D,QAAI0B,QAAQ,GAAG,gBAAK7B,IAAL,EAAWG,IAAX,CAAf;AACA,WAAO,kBAAS0B,QAAT,EAAmB8B,OAA1B;AACA;;AAED,SAAOK,wBAAP,CAAgChE,IAAhC,EAA8CiE,UAA9C,EAAoEC,OAAe,GAAG,CAAtF,EAAiG;AAChG,QAAIC,MAAM,GAAGD,OAAb;AAEA,QAAIjB,GAAG,GAAGnD,SAAS,CAACmC,WAAV,CAAsBjC,IAAtB,EAA4B;AAAEmC,MAAAA,iBAAiB,EAAE8B;AAArB,KAA5B,CAAV;AACAhB,IAAAA,GAAG,CAACF,OAAJ,CAAa5C,IAAD,IAAkB;AAC7BgE,MAAAA,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASF,MAAT,EAAiB,kBAAS,gBAAKnE,IAAL,EAAWG,IAAX,CAAT,EAA2BwD,OAA5C,CAAT;AACA,KAFD;AAIA,WAAOQ,MAAP;AACA;;AAKD,SAAOG,iBAAP,CAAyBnD,GAAzB,EAAsChB,IAAtC,EAAoDoE,GAApD,EAAyE;AACxE,QAAIC,OAAO,GAAGrE,IAAd;AACA,QAAIiD,CAAC,GAAG,CAAR;;AACA,WAAO,mBAAK,IAAL,EAAW,gBAAKjC,GAAL,EAAUhB,IAAI,GAAGoE,GAAjB,CAAX,CAAP,EAA0C;AACzCpE,MAAAA,IAAI,GAAGqE,OAAO,GAAG,GAAV,GAAgBpB,CAAC,CAACqB,QAAF,GAAaC,QAAb,CAAsB,CAAtB,EAAyB,GAAzB,CAAvB;AACAtB,MAAAA,CAAC;AACD;;AAED,WAAOjD,IAAI,GAAGoE,GAAd;AACA;;AAQD,SAAOI,YAAP,CAAoB3E,IAApB,EAAkC4E,SAAlC,EAAqD1C,IAArD,EAAoF;AACnF,UAAM2C,KAAK,GAAG,IAAIC,MAAJ,CAAWF,SAAX,EAAsB1C,IAAI,CAAC6C,UAAL,GAAkB,GAAlB,GAAwB3C,SAA9C,CAAd;;AACA,QAAIF,IAAI,CAAC8C,SAAL,IAAkB,EAAtB,EAA0B;AACzB9C,MAAAA,IAAI,CAAC8C,SAAL,GAAiB9C,IAAI,CAAC8C,SAAL,CAAeC,OAAf,CAAuB,GAAvB,EAA4BL,SAA5B,CAAjB;AACA;;AAED,QAAIM,EAAE,GAAG,IAAIC,UAAJ,CAAenF,IAAf,CAAT;AACA,QAAIoF,MAAM,GAAG,CAAb;AACA,QAAIjB,MAAM,GAAG,EAAb;;AACA,OAAG;AACF,UAAIkB,IAAI,GAAGH,EAAE,CAACI,IAAH,EAAX;AACA,UAAID,IAAI,KAAK,KAAb,EAAoB;AACpBD,MAAAA,MAAM;AACN,UAAIG,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAWX,KAAX,CAAd;;AACA,UAAK3C,IAAI,CAACuD,OAAL,IAAgB,CAACF,OAAlB,IAA+B,CAACrD,IAAI,CAACuD,OAAN,IAAiBF,OAApD,EAA8D;AAC7D,YAAIrD,IAAI,CAAC8C,SAAL,IAAkB,EAAtB,EAA0B;AACzBK,UAAAA,IAAI,GAAGA,IAAI,CAACJ,OAAL,CAAaJ,KAAb,EAAoB3C,IAAI,CAAC8C,SAAzB,CAAP;AACA;;AACD,YAAI9C,IAAI,CAACwD,SAAL,IAAkBtD,SAAtB,EAAiC;AAChCiD,UAAAA,IAAI,GAAGnD,IAAI,CAACwD,SAAL,CAAeL,IAAf,CAAP;AACA;;AACDlB,QAAAA,MAAM,CAACvB,IAAP,CAAY,CACXwC,MADW,EAEXC,IAAI,CAACJ,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAFW,CAAZ;AAIA;AACD,KAjBD,QAiBS,IAjBT;;AAmBA,WAAOd,MAAP;AACA;;AAKD,SAAOpC,KAAP,CAAa/B,IAAb,EAA2B;AAC1B,QAAI,CAAC,mBAAK,IAAL,EAAWA,IAAX,CAAL,EAAuB;AACtB,0BAAM,IAAN,EAAYA,IAAZ;AACA;AACD;;AAMD,SAAO2F,cAAP,CAAsB3F,IAAtB,EAAoCkC,IAApC,EAA2D;AAC1D,QAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AACX,QAAIA,IAAI,CAACI,SAAL,IAAkBF,SAAtB,EAAiCF,IAAI,CAACI,SAAL,GAAiB,IAAjB;AAEjC,QAAIC,KAAK,GAAGzC,SAAS,CAACmC,WAAV,CAAsBjC,IAAtB,EAA4BkC,IAA5B,CAAZ;;AAEA,SAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,KAAK,CAACG,MAA1B,EAAkCU,CAAC,EAAnC,EAAuC;AACtC,0BAAM,gBAAKpD,IAAL,EAAWuC,KAAK,CAACa,CAAD,CAAhB,CAAN;AACA;AACD;;AA7PqB;;;;gBAAVtD,S,mBACmB,M;;AAkQzB,MAAM8F,WAAN,CAAkB;AAMxBC,EAAAA,WAAW,CACVC,UADU,EAEVC,UAFU,EAGV/F,IAHU,EAIVgG,OAJU,EAKVC,WALU,EAMV7E,OAAgB,GAAG,IANT,EAOT;AAAA,yCAZ8B,EAY9B;;AAAA;;AAAA;;AAAA,sCAT8B,EAS9B;;AACD,SAAK6E,WAAL,GAAmBA,WAAnB;AACA,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKE,QAAL,CAAcJ,UAAd,EAA0BC,UAA1B,EAAsC/F,IAAtC,EAA4CoB,OAA5C;AACA;;AAEO8E,EAAAA,QAAR,CAAiBJ,UAAjB,EAAqCC,UAArC,EAAyD/F,IAAzD,EAAuEoB,OAAgB,GAAG,IAA1F,EAAsG;AACrG,QAAIhB,GAAG,GAAGC,YAAOC,WAAP,EAAV;;AACA,QAAIuB,QAAQ,GAAG,gBAAKiE,UAAL,EAAiBC,UAAjB,EAA6B/F,IAA7B,CAAf;;AACA,QAAI,CAAC,mBAAK,IAAL,EAAW6B,QAAX,CAAL,EAA2B;AAC1BzB,MAAAA,GAAG,CAACG,IAAJ,CAAU,UAAS,gBAAKwF,UAAL,EAAiB/F,IAAjB,CAAuB,oCAAmC,KAAKiG,WAAY,UAA9F;AACA;AACA;;AACD,QAAIE,KAAK,GAAG,mBAAK,IAAL,EAAWtE,QAAX,CAAZ;;AAEA,QAAIsE,KAAK,IAAIrG,SAAS,CAACmC,WAAV,CAAsBJ,QAAtB,EAAgC;AAAES,MAAAA,SAAS,EAAE;AAAb,KAAhC,EAAsDI,MAAtD,IAAgE,CAA7E,EAAgF;AAE/E;AACA,KAHD,MAGO,IAAI,CAACyD,KAAL,EAAY;AAClBtE,MAAAA,QAAQ,GAAG,gBAAKiE,UAAL,EAAiBC,UAAjB,CAAX;AACA;;AAED,SAAKK,QAAL,CAAcxD,IAAd,CACC,eACCf,QADD,EAEC;AACCwE,MAAAA,UAAU,EAAE,IADb;AAEC/D,MAAAA,SAAS,EAAE,KAFZ;AAGCN,MAAAA,QAAQ,EAAElC,SAAS,CAAC6B;AAHrB,KAFD,EAOC,CAAC2E,KAAD,EAAQC,QAAR,KAAqB;AACpB,UAAI,CAACA,QAAL,EAAe;AACf,UAAIpG,IAAI,GAAGgG,KAAK,GAAGI,QAAQ,CAAC9B,QAAT,EAAH,GAAyBzE,IAAzC;;AACA,UAAImG,KAAK,IAAI,CAAC,mBAAK,IAAL,EAAW,gBAAKtE,QAAL,EAAe1B,IAAf,CAAX,CAAd,EAAgD;AAM/C;AACA,OAPD,MAOO,IAAIgG,KAAJ,EAAW;AACjBhG,QAAAA,IAAI,GAAG,gBAAKH,IAAL,EAAWG,IAAX,CAAP;AACA,OAFM,MAEA,IAAI,CAACgG,KAAD,IAAUI,QAAQ,IAAIvG,IAA1B,EAAgC;AAEtC;AACA;;AAGD,UAAI,KAAKwG,WAAL,CAAiB7D,QAAjB,CAA0BxC,IAA1B,CAAJ,EAAqC;AACrC,UAAIsG,OAAO,GAAG,KAAKD,WAAL,CAAiBE,OAAjB,CAAyB,GAAzB,CAAd;;AACA,UAAID,OAAO,IAAI,CAAf,EAAkB;AACjB,aAAKD,WAAL,CAAiBC,OAAjB,IAA4BtG,IAA5B;AACA,OAFD,MAEO;AACN,aAAKqG,WAAL,CAAiB5D,IAAjB,CAAsBzC,IAAtB;AACA;;AAIDwG,MAAAA,UAAU,CAAC,MAAM;AAChB,aAAKH,WAAL,CAAiB,KAAKA,WAAL,CAAiBE,OAAjB,CAAyBvG,IAAzB,CAAjB,IAAmD,GAAnD;AACA,aAAKyG,MAAL,CAAYN,KAAZ,EAAmBnG,IAAnB;AACA,OAHS,EAGP,KAAK6F,OAHE,CAAV;AAIA,KAvCF,CADD;;AA8CA,QAAIG,KAAJ,EAAW;AACV,4BAAW,gBAAKL,UAAL,EAAiBC,UAAjB,EAA6B/F,IAA7B,CAAX,EAA+C+C,OAA/C,CAAwD5B,GAAD,IAAiB;AACvE,aAAK+E,QAAL,CAAcJ,UAAd,EAA0BC,UAA1B,EAAsC,gBAAK/F,IAAL,EAAWmB,GAAX,CAAtC,EAAuD,KAAvD;AACA,OAFD;AAGA;;AAED,QAAIC,OAAJ,EAAa;AACZhB,MAAAA,GAAG,CAACsB,IAAJ,CAAU,YAAW,KAAKuE,WAAY,cAAtC;AACA;AACD;;AAKMW,EAAAA,MAAP,CAAcN,KAAd,EAA6BnG,IAA7B,EAAiD;AAEhDmG,IAAAA,KAAK;AACLnG,IAAAA,IAAI;AACJ;;AAEM0G,EAAAA,IAAP,GAAoB;AACnB,SAAKT,QAAL,CAAcrD,OAAd,CAAuB+D,OAAD,IAAwB;AAC7CA,MAAAA,OAAO,CAACC,KAAR;AACA,KAFD;AAGA;;AAzGuB;;;;AAoHlB,SAASC,cAAT,CAAwBA,cAAxB,EAA6CC,SAA7C,EAAkEC,SAAlE,EAAqF3C,GAArF,EAA0G;AAChH,MAAI,CAACyC,cAAc,CAACG,MAApB,EAA4B,OAAO,CAAP;;AAE5B,MAAIC,GAAG,GAAGC,kBAAU/G,WAAV,EAAV;;AACA,MAAIF,GAAG,GAAGC,YAAOC,WAAP,CAAmB8G,GAAG,CAACE,OAAJ,CAAYC,OAA/B,CAAV;;AACA,MAAIC,OAAO,GAAG1H,SAAS,CAACmC,WAAV,CAAsBiF,SAAtB,EAAiC;AAC9C/E,IAAAA,iBAAiB,EAAE,CAClBoC,GADkB;AAD2B,GAAjC,CAAd;AAMAiD,EAAAA,OAAO,CAACzE,OAAR,CAAiB5C,IAAD,IAAkB;AACjC,QAAI,CAACsH,mBAAWC,aAAX,CAAyBV,cAAc,CAACW,OAAxC,EAAiDxH,IAAjD,CAAD,IAA2D,CAAC8G,SAAS,CAACtE,QAAV,CAAmBxC,IAAnB,CAAhE,EAA0F;AAEzF,UAAIyH,SAAS,GAAG,gBAAKR,GAAG,CAACS,OAAT,EAAkB1H,IAAlB,CAAhB;AACAL,MAAAA,SAAS,CAACiC,KAAV,CAAgB,mBAAQ6F,SAAR,CAAhB;AACA,uBAAG,gBAAKV,SAAL,EAAgB/G,IAAhB,CAAH,EAA0ByH,SAA1B;;AACA,UAAI,mBAAK,IAAL,EAAW,gBAAKV,SAAL,EAAgB/G,IAAhB,EAAsB,MAAtB,CAAX,CAAJ,EAA+C;AAC9C,yBAAG,gBAAK+G,SAAL,EAAgB/G,IAAhB,EAAsB,MAAtB,CAAH;AACA;;AACD,UAAIoB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AACpCrB,QAAAA,GAAG,CAACsB,IAAJ,CAAU,uBAAsBvB,IAAK,OAAMyH,SAAU,GAArD;AACA;AACD;AACD,GAbD;AAeA,SAAO,CAAP;AACA;;AA0CM,MAAMzC,UAAN,CAAiB;AAIvBU,EAAAA,WAAW,CAAC1F,IAAmB,GAAG,IAAvB,EAA6B6B,QAAgB,GAAG,MAAhD,EAAwD;AAAA;;AAAA;;AAClE,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAK8F,MAAL,GAAc,IAAd;;AACA,QAAI3H,IAAI,IAAI,IAAZ,EAAkB;AACjB,WAAK4H,UAAL,CAAgB5H,IAAhB;AACA;AACD;;AAED4H,EAAAA,UAAU,CAAC5H,IAAD,EAAwB;AACjC,QAAI,CAAC,mBAAK,IAAL,EAAWA,IAAX,CAAL,EAAuB;AACtB,UAAIC,GAAG,GAAGC,YAAOC,WAAP,EAAV;;AACAF,MAAAA,GAAG,CAACG,IAAJ,CAAU,QAAOJ,IAAK,gBAAtB;AACA,aAAO,KAAP;AACA;;AACD,UAAM6H,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,SAAKH,MAAL,GAAc,IAAIE,UAAJ,CAAe7H,IAAf,CAAd;AACA,WAAO,IAAP;AACA;;AAEDmF,EAAAA,IAAI,GAAQ;AACX,QAAI,KAAKwC,MAAL,IAAe,IAAnB,EAAyB,OAAO,KAAP;AACzB,QAAIzC,IAAS,GAAG,KAAKyC,MAAL,CAAYxC,IAAZ,EAAhB;AACA,WAAOD,IAAI,KAAK,KAAT,GAAiB,KAAjB,GAAyBA,IAAI,CAACZ,QAAL,CAAc,KAAKzC,QAAnB,CAAhC;AACA;;AAED6E,EAAAA,IAAI,GAAS;AACZ,QAAI,KAAKiB,MAAL,IAAe,IAAnB,EAAyB;AACxB,WAAKA,MAAL,CAAYf,KAAZ;AACA;AACD;;AAjCsB","sourcesContent":["import { readdirSync, readFileSync, statSync, watch, writeFileSync, FSWatcher } from \"fs\";\nimport { basename, dirname, extname, join } from \"path\";\nimport { mkdir, mv, rm, test, touch } from \"shelljs\";\nimport { AppConfig } from \"./config\";\nimport { Logger } from \"./log\";\nimport { getDirList } from \"./dirs\";\nimport { ArrayUtils } from \"./object\";\n\n/**\n * For FileUtils.searchInFile()\n */\ninterface searchOptions {\n\tinverse: boolean;\n\tignoreCase: boolean;\n\tmarkFound: string;\n\tprocessor?: Function;\n}\n\n/**\n * For FileUtils.dir()\n */\nexport interface fileEntry {\n\tbytes?: number;\n\tfullPath: string;\n\tlastModified: Date;\n\tlastModifiedMs: number;\n\ttype: string;\n\tneedsAction: boolean;\n}\n\n/**\n * For FileUtils.getFileList()\n */\nexport interface fileListOptions {\n\tallowedExtensions?: string[];\n\texcludeList?: string[];\n\trecursive?: boolean;\n}\n\n/**\n * Utility class with static utility methods for files and directories\n */\nexport class FileUtils {\n\tstatic ENCODING_UTF8: string = \"utf8\";\n\n\t/**\n\t * Method to safely read a json file\n\t *\n\t * @param path to json file to read\n\t * @returns with read json content\n\t */\n\tstatic readJsonFile(path: string, ignoreErrors: boolean = true): object {\n\t\tlet parsed = {};\n\t\tlet file = basename(path);\n\t\tif (!test(\"-f\", path)) {\n\t\t\tlet log = Logger.getInstance();\n\t\t\tlog.warn(`File ${file} not found in directory ${dirname(path)}`);\n\t\t\treturn {};\n\t\t}\n\t\tlet data = FileUtils.readFile(path);\n\n\t\tif (data) {\n\t\t\ttry {\n\t\t\t\tparsed = JSON.parse(data);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(`Error parsing ${path}\\n`, Logger.error2string(err));\n\t\t\t\tconsole.error(`\\\n\nThe structure of this file is invalid, meaning, messed up.\n`);\n\t\t\t}\n\t\t} else if (!ignoreErrors) throw new Error(`No data retured whle reading ${file}`);\n\n\t\treturn parsed;\n\t}\n\n\t/**\n\t * Method to safely write a json file. Overwrites existing file\n\t *\n\t * @param content for json file to write\n\t * @param path of file\n\t */\n\tstatic writeJsonFile(content: object, dir: string, file: string, verbose: boolean = true): void {\n\t\tlet data = JSON.stringify(content, null, \"\\t\");\n\t\tlet log = Logger.getInstance();\n\n\t\tif (FileUtils.writeFile(dir, file, data, false) && verbose && process.env.NODE_ENV !== \"test\") {\n\t\t\tlog.info(`Data written to file ${file}`);\n\t\t}\n\t}\n\n\t/**\n\t * Method to safely read a file.\n\t */\n\tstatic readFile(path: string): string {\n\t\tlet data = \"\";\n\t\ttry {\n\t\t\tdata = readFileSync(path, FileUtils.ENCODING_UTF8);\n\t\t} catch (err) {\n\t\t\tlet log = Logger.getInstance();\n\t\t\tlog.error(`Error reading ${path}`, Logger.error2string(err));\n\t\t\tthrow err;\n\t\t}\n\t\treturn data;\n\t}\n\n\t/**\n\t * Method to safely write to a file.\n\t */\n\tstatic writeFile(dir: string, file: string, content: string, verbose: boolean, flag: string = \"w\"): boolean {\n\t\tlet log = Logger.getInstance();\n\t\tlet fullPath = join(dir, file);\n\t\tlet dir4sure = dirname(fullPath);\n\n\t\tif (dir4sure && !test(\"-d\", dir4sure)) {\n\t\t\tFileUtils.mkdir(dir4sure);\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileSync(fullPath, content, {\n\t\t\t\tencoding: FileUtils.ENCODING_UTF8,\n\t\t\t\tflag: flag\n\t\t\t});\n\t\t\tif (verbose && process.env.NODE_ENV !== \"test\") {\n\t\t\t\tlog.info(`- File written: ${file}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tlog.error(`- Failed to write file ${fullPath}`, Logger.error2string(err));\n\t\t\tthrow err;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Method to get a list of file(s) from:\n\t * - a single file name\n\t * - a directory\n\t */\n\tstatic getFileList(path: string, opts: fileListOptions = {}): string[] {\n\t\tif (!test(\"-e\", path)) {\n\t\t\tthrow new Error(\"Path \" + path + \" doesn't exist\");\n\t\t}\n\n\t\tlet allowedExtensions = opts.allowedExtensions == undefined ? [] : opts.allowedExtensions;\n\t\tlet excludeList = opts.excludeList == undefined ? [] : opts.excludeList;\n\t\tlet recursive = opts.recursive == undefined ? true : opts.recursive;\n\t\tlet files: string[] = [];\n\n\t\tfunction addFile(file: string) {\n\t\t\tfile = file.substr(path.length + 1);\n\t\t\tif (excludeList.includes(file)) return;\n\t\t\tif (allowedExtensions.length == 0 || allowedExtensions.includes(extname(file))) {\n\t\t\t\tfiles.push(file);\n\t\t\t}\n\t\t}\n\t\tfunction addPath(dirname: string) {\n\t\t\tif (excludeList.includes(basename(dirname))) return;\n\n\t\t\treaddirSync(dirname).forEach((file: string) => {\n\t\t\t\tconst realpath = join(dirname, file);\n\t\t\t\tif (recursive && test(\"-d\", realpath)) {\n\t\t\t\t\taddPath(realpath);\n\t\t\t\t} else if (test(\"-f\", realpath)) {\n\t\t\t\t\taddFile(realpath);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (test(\"-f\", path)) {\n\t\t\taddFile(path);\n\t\t} else {\n\t\t\taddPath(path);\n\t\t}\n\n\t\treturn files;\n\t}\n\n\t/**\n\t * Comparable with a console dir command to retrieve file names, size in bytes and last modified\n\t * Returns object with key/value pairs; name (key), fileEntry (value).\n\t */\n\tstatic dir(path: string, recursive: boolean = false): Map<string, fileEntry> {\n\t\tlet lst = new Map();\n\t\tlet src = FileUtils.getFileList(path, { recursive: recursive });\n\n\t\tfor (let i = 0; i < src.length; i++) {\n\t\t\tlet file = src[i];\n\t\t\tlet fullPath = join(path, file);\n\t\t\tlet info = statSync(fullPath);\n\t\t\tlet entry: fileEntry = {\n\t\t\t\tbytes: info.size, // @todo Perhaps package filesize to make this human readable?\n\t\t\t\tfullPath: fullPath,\n\t\t\t\tlastModified: info.mtime,\n\t\t\t\tlastModifiedMs: info.mtimeMs,\n\t\t\t\ttype: extname(file),\n\t\t\t\tneedsAction: false\n\t\t\t};\n\t\t\tlst.set(file, entry);\n\t\t}\n\n\t\treturn lst;\n\t}\n\n\t/**\n\t * @returns Last modified timestamp (mtimeMs)\n\t */\n\tstatic getLastModified(path: string, file: string): number {\n\t\tlet fullPath = join(path, file);\n\t\treturn statSync(fullPath).mtimeMs;\n\t}\n\n\tstatic getLastChangeInDirectory(path: string, extensions: string[], startAt: number = 0): number {\n\t\tlet retVal = startAt;\n\n\t\tlet lst = FileUtils.getFileList(path, { allowedExtensions: extensions });\n\t\tlst.forEach((file: string) => {\n\t\t\tretVal = Math.max(retVal, statSync(join(path, file)).mtimeMs);\n\t\t});\n\n\t\treturn retVal;\n\t}\n\n\t/**\n\t * Get a unique filename, provided given file already exists\n\t */\n\tstatic getUniqueFileName(dir: string, file: string, ext: string): string {\n\t\tlet orgFile = file;\n\t\tlet i = 1;\n\t\twhile (test(\"-f\", join(dir, file + ext))) {\n\t\t\tfile = orgFile + \"-\" + i.toString().padStart(2, \"0\");\n\t\t\ti++;\n\t\t}\n\n\t\treturn file + ext;\n\t}\n\n\t/**\n\t * Search for occurences of a string in a file\n\t * In opts.markFound a placeholder $ to insert the search string\n\t *\n\t * @returns array with arrays; 1st element line #, 2nd element data of line\n\t */\n\tstatic searchInFile(path: string, searchFor: string, opts: searchOptions): object[] {\n\t\tconst regex = new RegExp(searchFor, opts.ignoreCase ? \"i\" : undefined);\n\t\tif (opts.markFound != \"\") {\n\t\t\topts.markFound = opts.markFound.replace(\"$\", searchFor);\n\t\t}\n\n\t\tlet lr = new LineReader(path);\n\t\tlet lineNr = 0;\n\t\tlet retVal = [];\n\t\tdo {\n\t\t\tlet line = lr.next();\n\t\t\tif (line === false) break; // End of file\n\t\t\tlineNr++;\n\t\t\tlet matched = line.match(regex);\n\t\t\tif ((opts.inverse && !matched) || (!opts.inverse && matched)) {\n\t\t\t\tif (opts.markFound != \"\") {\n\t\t\t\t\tline = line.replace(regex, opts.markFound);\n\t\t\t\t}\n\t\t\t\tif (opts.processor != undefined) {\n\t\t\t\t\tline = opts.processor(line);\n\t\t\t\t}\n\t\t\t\tretVal.push([\n\t\t\t\t\tlineNr,\n\t\t\t\t\tline.replace(\"\\t\", \"\")\n\t\t\t\t]);\n\t\t\t}\n\t\t} while (true);\n\n\t\treturn retVal;\n\t}\n\n\t/**\n\t * If a directory doesn't exist yet, create\n\t */\n\tstatic mkdir(path: string) {\n\t\tif (!test(\"-e\", path)) {\n\t\t\tmkdir(\"-p\", path);\n\t\t}\n\t}\n\n\t/**\n\t * Touch all files in a directory resursively.\n\t * Default value for opts.resursive = true.\n\t */\n\tstatic touchRecursive(path: string, opts: fileListOptions) {\n\t\tif (!opts) opts = {};\n\t\tif (opts.recursive == undefined) opts.recursive = true;\n\n\t\tlet files = FileUtils.getFileList(path, opts);\n\n\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\ttouch(join(path, files[i]));\n\t\t}\n\t}\n}\n\n/**\n * Class to organize file watching\n */\nexport class FileWatcher {\n\tprivate nowChanging: string[] = [];\n\tprivate description: string;\n\tprivate timeout: number;\n\tprivate watchers: FSWatcher[] = [];\n\n\tconstructor(\n\t\tworkingDir: string,\n\t\tprojectDir: string,\n\t\tpath: string,\n\t\ttimeout: number,\n\t\tdescription: string,\n\t\tverbose: boolean = true\n\t) {\n\t\tthis.description = description;\n\t\tthis.timeout = timeout;\n\t\tthis.addWatch(workingDir, projectDir, path, verbose);\n\t}\n\n\tprivate addWatch(workingDir: string, projectDir: string, path: string, verbose: boolean = true): void {\n\t\tlet log = Logger.getInstance();\n\t\tlet fullPath = join(workingDir, projectDir, path);\n\t\tif (!test(\"-e\", fullPath)) {\n\t\t\tlog.warn(`Path ./${join(projectDir, path)} doesn't exist. Request to watch ${this.description} ignored`);\n\t\t\treturn;\n\t\t}\n\t\tlet isDir = test(\"-d\", fullPath);\n\n\t\tif (isDir && FileUtils.getFileList(fullPath, { recursive: false }).length == 0) {\n\t\t\t// To prevent error with dirs which don't contain files\n\t\t\treturn;\n\t\t} else if (!isDir) {\n\t\t\tfullPath = join(workingDir, projectDir); // Watch directory, not file (workaround for bug in Node.js)\n\t\t}\n\n\t\tthis.watchers.push(\n\t\t\twatch(\n\t\t\t\tfullPath,\n\t\t\t\t{\n\t\t\t\t\tpersistent: true,\n\t\t\t\t\trecursive: false,\n\t\t\t\t\tencoding: FileUtils.ENCODING_UTF8\n\t\t\t\t},\n\t\t\t\t(event, filename) => {\n\t\t\t\t\tif (!filename) return;\n\t\t\t\t\tlet file = isDir ? filename.toString() : path;\n\t\t\t\t\tif (isDir && !test(\"-f\", join(fullPath, file))) {\n\t\t\t\t\t\t// File deleted. The 'rename' event occurs when:\n\t\t\t\t\t\t// - a new file is added,\n\t\t\t\t\t\t// - a file is deleted,\n\t\t\t\t\t\t// - buffer file is deleted - some text editor don't simply overwrite\n\t\t\t\t\t\t// log.warn(`File ./${join(fullPath, file)} is deleted`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (isDir) {\n\t\t\t\t\t\tfile = join(path, file); // Example: files.ts becomes lib/files.ts\n\t\t\t\t\t} else if (!isDir && filename != path) {\n\t\t\t\t\t\t// Seems to be a buffer file\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Delaying mechanisme to prevent a phenomenon like \"contact bounce\"\n\t\t\t\t\t// https://en.wikipedia.org/wiki/Switch#Contact_bounce\n\t\t\t\t\tif (this.nowChanging.includes(file)) return;\n\t\t\t\t\tlet recycle = this.nowChanging.indexOf(\"-\");\n\t\t\t\t\tif (recycle >= 0) {\n\t\t\t\t\t\tthis.nowChanging[recycle] = file;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.nowChanging.push(file);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bug in node.js (respond time)\n\t\t\t\t\t// See https://github.com/gruntjs/grunt-contrib-watch/issues/13\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.nowChanging[this.nowChanging.indexOf(file)] = \"-\"; // ready for recycling\n\t\t\t\t\t\tthis.change(event, file);\n\t\t\t\t\t}, this.timeout);\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\t// Unfortunately, recursive watching of subdirs doesn't work (properly) on all platforms\n\t\t// Workaround: This method will call itself recursively\n\t\tif (isDir) {\n\t\t\tgetDirList(join(workingDir, projectDir, path)).forEach((dir: string) => {\n\t\t\t\tthis.addWatch(workingDir, projectDir, join(path, dir), false);\n\t\t\t});\n\t\t}\n\n\t\tif (verbose) {\n\t\t\tlog.info(`Watching ${this.description} for changes`);\n\t\t}\n\t}\n\n\t/**\n\t * Method to overwrite\n\t */\n\tpublic change(event: string, file: string): void {\n\t\t// Fool compiler - unused variable\n\t\tevent;\n\t\tfile;\n\t}\n\n\tpublic stop(): void {\n\t\tthis.watchers.forEach((watcher: FSWatcher) => {\n\t\t\twatcher.close();\n\t\t});\n\t}\n}\n\n/**\n * Remove obsolete output files\n *\n * @param removeObsolete settings from config.json\n * @param processed by production of output files\n * @param outputDir\n * @param ext to search for\n */\nexport function removeObsolete(removeObsolete: any, processed: string[], outputDir: string, ext: string): number {\n\tif (!removeObsolete.active) return 0;\n\n\tlet cfg = AppConfig.getInstance();\n\tlet log = Logger.getInstance(cfg.options.logging);\n\tlet sources = FileUtils.getFileList(outputDir, {\n\t\tallowedExtensions: [\n\t\t\text\n\t\t]\n\t});\n\n\tsources.forEach((file: string) => {\n\t\tif (!ArrayUtils.inExcludeList(removeObsolete.exclude, file) && !processed.includes(file)) {\n\t\t\t// Not in exclude list, not in list of processed files\n\t\t\tlet trashFile = join(cfg.dirTemp, file);\n\t\t\tFileUtils.mkdir(dirname(trashFile));\n\t\t\tmv(join(outputDir, file), trashFile);\n\t\t\tif (test(\"-f\", join(outputDir, file, \".map\"))) {\n\t\t\t\trm(join(outputDir, file, \".map\")); // Source map\n\t\t\t}\n\t\t\tif (process.env.NODE_ENV !== \"test\") {\n\t\t\t\tlog.info(`Moved obsolete file ${file} to ${trashFile} `);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn 1;\n}\n\n/**\n * Read lines in a file synchronously, for strictly sequential parsing.\n *\n * Usage of this class:\n *\n * ```\n * let lr = new LineReader(\"example.txt\");\n * do {\n *     let line = lr.next(); // Returns array: [ line number,  ]\n *     if (line[1] === false) break; // End of file\n *     if ( <some condition> ) {\n *         lr.stop();\n *         break;\n *     }\n * } while (true);\n * ```\n *\n * In case of loops with multiple files to read:\n *\n * ```\n * let lr = new LineReader();\n * // begin loop files\n * if (lr.initialize(path)) {\n *     // Loop lines\n * }\n * // end loop files\n * ```\n *\n * @see FileUtils.searchInFile() in this file for implementation example\n *\n * Notes:\n *\n * + Using a Transform stream seems overkill. The package n-readlines follows the\n * [KISS principle](https://en.wikipedia.org/wiki/KISS_principle)\n *\n * + [Example](https://medium.com/@wietsevenema/node-js-using-for-await-to-read-lines-from-a-file-ead1f4dd8c6f)\n * of workaround for old Node.js callback in createInterface(), using async, await and Transform Stream.\n *\n *\n */\nexport class LineReader {\n\tprivate encoding: string;\n\tprivate reader: any;\n\n\tconstructor(file: string | null = null, encoding: string = \"utf8\") {\n\t\tthis.encoding = encoding;\n\t\tthis.reader = null;\n\t\tif (file != null) {\n\t\t\tthis.initialize(file);\n\t\t}\n\t}\n\n\tinitialize(file: string): boolean {\n\t\tif (!test(\"-f\", file)) {\n\t\t\tlet log = Logger.getInstance();\n\t\t\tlog.warn(`File ${file} doesn't exist`);\n\t\t\treturn false;\n\t\t}\n\t\tconst lineByLine = require(\"n-readlines\");\n\t\tthis.reader = new lineByLine(file);\n\t\treturn true;\n\t}\n\n\tnext(): any {\n\t\tif (this.reader == null) return false;\n\t\tlet line: any = this.reader.next();\n\t\treturn line === false ? false : line.toString(this.encoding);\n\t}\n\n\tstop(): void {\n\t\tif (this.reader != null) {\n\t\t\tthis.reader.close();\n\t\t}\n\t}\n}\n"]}