{"version":3,"sources":["misc.ts"],"names":["cfg","AppConfig","getInstance","log","Logger","options","logging","generateWeb","verbose","session","SessionVars","SassUtils","compile","dir","dirProject","html","dirs","content","Content","renderAll","rendered","forEach","file","add","ProcessingTypes","Sitemap","generate","warn","backupChangedSource","isFirst","frmtr","Formatter","name","prefix","date","Date","arch","diff","cmd","dirMain","concat","error","includes","err","error2string","searchProject","searchFor","retVal","javascript","source","sass","i","templates","length","push","stripHeaders","data","replace","files","FileUtils","getFileList","allowedExtensions","dirContent","fileContent","results","searchInFile","inverse","ignoreCase","markFound","processor"],"mappings":"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","sourcesContent":["import { extname, join } from \"path\";\nimport { platform } from \"os\";\n// import { EOL } from 'os'\nimport { exec, test } from \"shelljs\";\nimport { AppConfig, FileUtils, Logger } from \"../lib\";\nimport { Sitemap } from \"../lib/sitemap\";\nimport { Formatter } from \"../lib/utils\";\nimport { compile as compileJs } from \"./babel\";\nimport { Content } from \"../lib/html\";\nimport { SassUtils } from \"./styling\";\nimport { ProcessingTypes, SessionVars } from \"../sys/session\";\n// import { compileTypeScript } from \"./typescript\";\n\nlet cfg = AppConfig.getInstance();\nlet log = Logger.getInstance(cfg.options.logging);\n\n/**\n * Create local website:\n * - Transcompile changed Scss, Flow and TypeScript\n * - Render changed .html using template engine\n * - Generate Google sitemap\n *\n */\nexport function generateWeb(verbose: boolean): void {\n\tlet cfg = AppConfig.getInstance();\n\tlet log = Logger.getInstance();\n\tlet session = SessionVars.getInstance();\n\n\tcompileJs(verbose);\n\tSassUtils.compile(verbose);\n\n\tlet dir = join(cfg.dirProject, cfg.options.html.dirs.content);\n\tif (test(\"-d\", dir)) {\n\t\tlet content = new Content();\n\t\tcontent.renderAll(verbose);\n\t\tcontent.rendered.forEach(file => {\n\t\t\tsession.add(ProcessingTypes.html, file);\n\t\t});\n\t\tSitemap.generate(verbose);\n\t} else {\n\t\tlog.warn(\n\t\t\t`HTML content directory \"${\n\t\t\t\tcfg.options.html.dirs.content\n\t\t\t}\" not found, skipping...`\n\t\t);\n\t}\n}\n\n/**\n * Initialization of auto-backup for dev server\n *\n * @param isFirst First file gets another file name\n */\nexport function backupChangedSource(isFirst: boolean = false): void {\n\tlet cfg = AppConfig.getInstance();\n\tlet log = Logger.getInstance();\n\tconst frmtr = Formatter.getInstance();\n\tlet name = isFirst ? \"first\" : \"changes\";\n\tlet prefix = frmtr.date(new Date(), \"YYYYMMDD-HHmm\");\n\n\tlet arch = join(\"backups\", `${prefix}-${name}.tgz`);\n\tlet diff = join(\"notes\", `${prefix}-git.diff`);\n\tlet cmd = \"\";\n\n\tif (platform() == \"win32\") {\n\t\tcmd = join(cfg.dirMain, \"bin\", \"backup-source.sh\").concat(` ${arch} ${diff}`);\n\t\tif (!test(\"-e\", \"bin/backup-source.bat\")) {\n\t\t\tlog.error(\n\t\t\t\t\"You are trying to run a non existing batch file bin/backup-source.bat.\\n\\\n\t\t\t\t Please write it and then retry. If it actually works, you might consider contrituting it\"\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t} else if ([\"darwin\", \"freebsd\", \"linux\", \"openbsd\"].includes(platform())) {\n\t\tcmd = join(cfg.dirMain, \"bin\", \"backup-source.sh\").concat(` ${arch} ${diff}`);\n\t} else {\n\t\tlog.warn(\"You are trying to run an external bash script. No can do\");\n\t\treturn;\n\t}\n\n\ttry {\n\t\texec(cmd, {});\n\t} catch (err) {\n\t\tlog.error(`Error creating ${arch} ${diff}`, Logger.error2string(err));\n\t}\n}\n\n/**\n * For searchProject()\n */\ninterface searchFile {\n\tname: string;\n\tresults: object[];\n}\n\n/**\n * For searchProject()\n */\ninterface searchDir {\n\tname: string;\n\tfiles: searchFile[];\n}\n\n/**\n * For searchProject()\n */\ninterface searchFinal {\n\tdirs: searchDir[];\n}\n\n/**\n * Search project files for a string\n *\n * @param html If true, return HTML code\n * @returns nested object with found entries\n */\nexport function searchProject(searchFor: string, html: boolean): object {\n\tlet cfg = AppConfig.getInstance();\n\tlet retVal: searchFinal = { dirs: [] };\n\tconst dirs = [\n\t\tcfg.options.javascript.dirs.source,\n\t\tcfg.options.sass.dirs.source,\n\t\tcfg.options.html.dirs.content\n\t];\n\tfor (let i = 0; i < cfg.options.html.dirs.templates.length; i++) {\n\t\tif (!dirs.includes(cfg.options.html.dirs.templates[i])) {\n\t\t\tdirs.push(cfg.options.html.dirs.templates[i]);\n\t\t}\n\t}\n\tif (test(\"-d\", join(cfg.dirProject, \"notes\"))) dirs.push(\"notes\");\n\tif (test(\"-d\", join(cfg.dirProject, \"docs\"))) dirs.push(\"docs\");\n\n\tfunction stripHeaders(data: string): string {\n\t\treturn data.replace(/<h\\d>/, \"\").replace(/<\\/h\\d>/, \"\");\n\t}\n\n\tfor (let i = 0; i < dirs.length; i++) {\n\t\tlet dir = dirs[i];\n\t\tlet files = FileUtils.getFileList(join(cfg.dirProject, dir), {\n\t\t\tallowedExtensions: [\n\t\t\t\t\".txt\",\n\t\t\t\t\".md\",\n\t\t\t\t\".scss\",\n\t\t\t\t\".css\",\n\t\t\t\t\".ts\",\n\t\t\t\t\".js\",\n\t\t\t\t\".njk\",\n\t\t\t\t\".html\"\n\t\t\t]\n\t\t});\n\t\tlet dirContent: searchDir = {\n\t\t\tname: dir,\n\t\t\tfiles: []\n\t\t};\n\n\t\tfiles.forEach((file: string) => {\n\t\t\tlet fileContent: searchFile = {\n\t\t\t\tname: file,\n\t\t\t\tresults: FileUtils.searchInFile(\n\t\t\t\t\tjoin(cfg.dirProject, dir, file),\n\t\t\t\t\tsearchFor,\n\t\t\t\t\t{\n\t\t\t\t\t\tinverse: false,\n\t\t\t\t\t\tignoreCase: true,\n\t\t\t\t\t\tmarkFound: html ? `<span style=\"color: red;\">$</span>` : \"\",\n\t\t\t\t\t\tprocessor: stripHeaders\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t};\n\t\t\tif (fileContent.results.length > 0) {\n\t\t\t\tdirContent.files.push(fileContent);\n\t\t\t}\n\t\t});\n\t\tif (dirContent.files.length > 0) {\n\t\t\tretVal.dirs.push(dirContent);\n\t\t}\n\t}\n\n\treturn retVal;\n}\n"]}