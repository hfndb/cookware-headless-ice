{"version":3,"sources":["misc.ts"],"names":["beautify","path","endsWith","substr","length","cfg","AppConfig","getInstance","pathIsDir","dirProject","log","Logger","options","logging","files","FileUtils","getFileList","dependencies","prettier","config","require","i","file","content","readFile","ext","parser","Object","assign","filepath","data","format","undefined","writeFile","info","err","error","error2string","Error","generateWeb","verbose","session","SessionVars","SassUtils","compile","dir","html","dirs","Content","renderAll","rendered","forEach","add","ProcessingTypes","Sitemap","generate","warn","backupChangedSource","isFirst","frmtr","Formatter","name","prefix","date","Date","arch","diff","cmd","dirMain","concat","includes","searchProject","searchFor","retVal","javascript","source","sass","templates","push","stripHeaders","replace","allowedExtensions","dirContent","fileContent","results","searchInFile","inverse","ignoreCase","markFound","processor"],"mappings":"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","sourcesContent":["import { extname, join } from \"path\";\nimport { platform } from \"os\";\n// import { EOL } from 'os'\nimport { exec, test } from \"shelljs\";\nimport { AppConfig, FileUtils, Logger } from \"../lib\";\nimport { Sitemap } from \"../lib/sitemap\";\nimport { Formatter } from \"../lib/utils\";\nimport { compile as compileJs } from \"./babel\";\nimport { Content } from \"../lib/html\";\nimport { SassUtils } from \"./styling\";\nimport { ProcessingTypes, SessionVars } from \"../sys/session\";\n// import { compileTypeScript } from \"./typescript\";\n\n/**\n * Beautify html, js, ts or scss file(s)\n * Uses configuration in config.json\n *\n * @param path to directory or file\n */\nexport function beautify(path: string): void {\n\tif (path.endsWith(\"/\")) path = path.substr(0, path.length - 1);\n\n\tlet cfg = AppConfig.getInstance();\n\tlet pathIsDir = test(\"-d\", join(cfg.dirProject, path));\n\tlet log = Logger.getInstance(cfg.options.logging);\n\tlet files = pathIsDir\n\t\t? FileUtils.getFileList(join(cfg.dirProject, path))\n\t\t: [\n\t\t\t\tpath\n\t\t\t];\n\tlet options = cfg.options.dependencies.prettier.config;\n\tconst prettier = require(\"prettier\");\n\n\tif (!pathIsDir) path = \"\";\n\tfor (let i = 0; i < files.length; i++) {\n\t\tlet file = files[i];\n\t\tlet content = FileUtils.readFile(join(cfg.dirProject, path, file));\n\t\tlet ext = extname(file);\n\t\tlet parser = \"\"; // See https://prettier.io/docs/en/options.html#parser\n\n\t\tswitch (ext) {\n\t\t\tcase \".css\":\n\t\t\t\tparser = \"css\";\n\t\t\t\tbreak;\n\t\t\tcase \".scss\":\n\t\t\t\tparser = \"css\"; // postcss is deprecated\n\t\t\t\tbreak;\n\t\t\tcase \".html\":\n\t\t\t\tparser = \"html\";\n\t\t\t\tbreak;\n\t\t\tcase \".js\":\n\t\t\t\tparser = \"babylon\";\n\t\t\t\tbreak;\n\t\t\tcase \".ts\":\n\t\t\t\tparser = \"typescript\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\n\t\tObject.assign(options, {\n\t\t\tfilepath: file,\n\t\t\tparser: parser\n\t\t});\n\n\t\ttry {\n\t\t\tlet data = prettier.format(content, options || undefined);\n\t\t\tif (FileUtils.writeFile(cfg.dirProject, join(path, file), data, false)) {\n\t\t\t\tlog.info(`- Beautyfied ${file}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tlog.error(`- Failed to render file ${file} `, Logger.error2string(err));\n\t\t\tthrow new Error(err);\n\t\t}\n\t}\n}\n\n/**\n * Create local website:\n * - Transcompile changed Scss, Flow and TypeScript\n * - Render changed .html using template engine\n * - Generate Google sitemap\n *\n */\nexport function generateWeb(verbose: boolean): void {\n\tlet cfg = AppConfig.getInstance();\n\tlet log = Logger.getInstance();\n\tlet session = SessionVars.getInstance();\n\n\tcompileJs(verbose);\n\tSassUtils.compile(verbose);\n\n\tlet dir = join(cfg.dirProject, cfg.options.html.dirs.content);\n\tif (test(\"-d\", dir)) {\n\t\tlet content = new Content();\n\t\tcontent.renderAll(verbose);\n\t\tcontent.rendered.forEach((file) => {\n\t\t\tsession.add(ProcessingTypes.html, file);\n\t\t});\n\t\tSitemap.generate(verbose);\n\t} else {\n\t\tlog.warn(`HTML content directory \"${cfg.options.html.dirs.content}\" not found, skipping...`);\n\t}\n}\n\n/**\n * Initialization of auto-backup for dev server\n *\n * @param isFirst First file gets another file name\n */\nexport function backupChangedSource(isFirst: boolean = false): void {\n\tlet cfg = AppConfig.getInstance();\n\tlet log = Logger.getInstance();\n\tconst frmtr = Formatter.getInstance();\n\tlet name = isFirst ? \"first\" : \"changes\";\n\tlet prefix = frmtr.date(new Date(), \"YYYYMMDD-HHmm\");\n\n\tlet arch = join(\"backups\", `${prefix}-${name}.tgz`);\n\tlet diff = join(\"notes\", `${prefix}-git.diff`);\n\tlet cmd = \"\";\n\n\tif (platform() == \"win32\") {\n\t\tcmd = join(cfg.dirMain, \"bin\", \"backup-source.sh\").concat(` ${arch} ${diff}`);\n\t\tif (!test(\"-e\", \"bin/backup-source.bat\")) {\n\t\t\tlog.error(\n\t\t\t\t\"You are trying to run a non existing batch file bin/backup-source.bat.\\n\\\n\t\t\t\t Please write it and then retry. If it actually works, you might consider contrituting it\"\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t} else if (\n\t\t[\n\t\t\t\"darwin\",\n\t\t\t\"freebsd\",\n\t\t\t\"linux\",\n\t\t\t\"openbsd\"\n\t\t].includes(platform())\n\t) {\n\t\tcmd = join(cfg.dirMain, \"bin\", \"backup-source.sh\").concat(` ${arch} ${diff}`);\n\t} else {\n\t\tlog.warn(\"You are trying to run an external bash script. No can do\");\n\t\treturn;\n\t}\n\n\ttry {\n\t\texec(cmd, {});\n\t} catch (err) {\n\t\tlog.error(`Error creating ${arch} ${diff}`, Logger.error2string(err));\n\t}\n}\n\n/**\n * For searchProject()\n */\ninterface searchFile {\n\tname: string;\n\tresults: object[];\n}\n\n/**\n * For searchProject()\n */\ninterface searchDir {\n\tname: string;\n\tfiles: searchFile[];\n}\n\n/**\n * For searchProject()\n */\ninterface searchFinal {\n\tdirs: searchDir[];\n}\n\n/**\n * Search project files for a string\n *\n * @param html If true, return HTML code\n * @returns nested object with found entries\n */\nexport function searchProject(searchFor: string, html: boolean): object {\n\tlet cfg = AppConfig.getInstance();\n\tlet retVal: searchFinal = { dirs: [] };\n\tconst dirs = [\n\t\tcfg.options.javascript.dirs.source,\n\t\tcfg.options.sass.dirs.source,\n\t\tcfg.options.html.dirs.content\n\t];\n\tfor (let i = 0; i < cfg.options.html.dirs.templates.length; i++) {\n\t\tif (!dirs.includes(cfg.options.html.dirs.templates[i])) {\n\t\t\tdirs.push(cfg.options.html.dirs.templates[i]);\n\t\t}\n\t}\n\tif (test(\"-d\", join(cfg.dirProject, \"notes\"))) dirs.push(\"notes\");\n\tif (test(\"-d\", join(cfg.dirProject, \"docs\"))) dirs.push(\"docs\");\n\n\tfunction stripHeaders(data: string): string {\n\t\treturn data.replace(/<h\\d>/, \"\").replace(/<\\/h\\d>/, \"\");\n\t}\n\n\tfor (let i = 0; i < dirs.length; i++) {\n\t\tlet dir = dirs[i];\n\t\tlet files = FileUtils.getFileList(join(cfg.dirProject, dir), {\n\t\t\tallowedExtensions: [\n\t\t\t\t\".txt\",\n\t\t\t\t\".md\",\n\t\t\t\t\".scss\",\n\t\t\t\t\".css\",\n\t\t\t\t\".ts\",\n\t\t\t\t\".js\",\n\t\t\t\t\".njk\",\n\t\t\t\t\".html\"\n\t\t\t]\n\t\t});\n\t\tlet dirContent: searchDir = {\n\t\t\tname: dir,\n\t\t\tfiles: []\n\t\t};\n\n\t\tfiles.forEach((file: string) => {\n\t\t\tlet fileContent: searchFile = {\n\t\t\t\tname: file,\n\t\t\t\tresults: FileUtils.searchInFile(join(cfg.dirProject, dir, file), searchFor, {\n\t\t\t\t\tinverse: false,\n\t\t\t\t\tignoreCase: true,\n\t\t\t\t\tmarkFound: html ? `<span style=\"color: red;\">$</span>` : \"\",\n\t\t\t\t\tprocessor: stripHeaders\n\t\t\t\t})\n\t\t\t};\n\t\t\tif (fileContent.results.length > 0) {\n\t\t\t\tdirContent.files.push(fileContent);\n\t\t\t}\n\t\t});\n\t\tif (dirContent.files.length > 0) {\n\t\t\tretVal.dirs.push(dirContent);\n\t\t}\n\t}\n\n\treturn retVal;\n}\n"]}