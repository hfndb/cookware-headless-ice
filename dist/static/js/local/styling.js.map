{"version":3,"sources":["styling.ts"],"names":["SassUtils","getOutputDir","cfg","AppConfig","getInstance","log","Logger","outputDir","dirProject","options","sass","dirs","output","error","addPrefixes","content","logging","autoprefixer","require","postcss","result","process","warnings","forEach","warn","toString","css","compile","verbose","outDir","processed","saydHello","path","source","changeList","sourcePath","targetPath","sourceExt","targetExt","write","entry","info","compileFile","push","target","maxMixin","maxSass","isMixin","startsWith","Math","max","lastModified","isNewOrModified","dir","FileUtils","getFileList","allowedExtensions","file","removeObsolete","dependencies","nodeSass","config","session","SessionVars","fullPath","readFile","server","beautify","includes","Beautify","writeFile","Object","assign","outFile","targetDir","sourceMap","concat","renderSync","Error","prefixed","add","ProcessingTypes","err","error2string"],"mappings":"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","sourcesContent":["import { basename, join } from \"path\";\nimport { cp, test, touch } from \"shelljs\";\nimport {\n\tgetChangeList,\n\tAppConfig,\n\tFileStatus,\n\tFileUtils,\n\tLogger\n} from \"../lib\";\nimport { Beautify } from \"../lib/beautify\";\nimport { removeObsolete } from \"../lib/files\";\nimport { ProcessingTypes, SessionVars } from \"../sys/session\";\n\ninterface prefixResult {\n\twarnings: Function;\n\tcss: string;\n}\n\nexport class SassUtils {\n\t/**\n\t * Get CSS output directory\n\t */\n\tstatic getOutputDir(): string {\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance();\n\t\tlet outputDir = \"\";\n\t\tif (test(\"-d\", join(cfg.dirProject, cfg.options.sass.dirs.output))) {\n\t\t\t// In case of local project\n\t\t\toutputDir = join(cfg.dirProject, cfg.options.sass.dirs.output);\n\t\t} else if (test(\"-d\", cfg.options.sass.dirs.output)) {\n\t\t\t// In case of hosting\n\t\t\toutputDir = cfg.options.sass.dirs.output;\n\t\t} else {\n\t\t\tlog.error(\"JavaScript output directory couldn't be determined\");\n\t\t}\n\n\t\treturn outputDir;\n\t}\n\n\t/**\n\t * Auto-prefix CSS with vendor specifics\n\t *\n\t */\n\tstatic addPrefixes(content: string): string {\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance(cfg.options.logging);\n\n\t\tconst autoprefixer = require(\"autoprefixer\");\n\t\tconst postcss = require(\"postcss\");\n\t\tlet result: prefixResult = postcss([autoprefixer]).process(content);\n\t\tresult.warnings().forEach(function(warn: string) {\n\t\t\tlog.warn(\"Warning autoprefixer: \" + warn.toString());\n\t\t});\n\t\treturn result.css;\n\t}\n\n\t/**\n\t * Compile all changed or new Sass files\n\t */\n\tstatic compile(verbose: boolean): void {\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance(cfg.options.logging);\n\t\tlet outDir = SassUtils.getOutputDir();\n\t\tlet processed: string[] = [];\n\t\tlet saydHello = false;\n\n\t\tlet path = join(cfg.dirProject, cfg.options.sass.dirs.source);\n\t\tif (!test(\"-e\", path)) {\n\t\t\tlog.warn(\n\t\t\t\t`Path ./${\n\t\t\t\t\tcfg.options.sass.dirs.source\n\t\t\t\t} doesn't exist. Request to compile ignored`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tlet changeList = getChangeList({\n\t\t\tsourcePath: join(cfg.dirProject, cfg.options.sass.dirs.source),\n\t\t\ttargetPath: outDir,\n\t\t\tsourceExt: [\".scss\"],\n\t\t\ttargetExt: \".css\"\n\t\t});\n\n\t\tfunction write(entry: FileStatus) {\n\t\t\tif (!saydHello && verbose) {\n\t\t\t\tsaydHello = true;\n\t\t\t\tlog.info(\"Transcompiling Sass\");\n\t\t\t}\n\t\t\tSassUtils.compileFile(entry, true);\n\t\t\tprocessed.push(entry.target);\n\t\t}\n\n\t\tlet maxMixin = 0; // to get the latest modified mixin\n\t\tlet maxSass = 0; // to get the latest modified other sass file\n\t\tchangeList.forEach((entry: FileStatus) => {\n\t\t\tlet isMixin = basename(entry.source).startsWith(\"_\");\n\t\t\tif (isMixin) {\n\t\t\t\tmaxMixin = Math.max(maxMixin, entry.lastModified);\n\t\t\t} else {\n\t\t\t\tmaxSass = Math.max(maxSass, entry.lastModified);\n\t\t\t}\n\n\t\t\tif (!isMixin && entry.isNewOrModified()) {\n\t\t\t\twrite(entry);\n\t\t\t}\n\t\t});\n\n\t\t// if (maxMixin > maxSass) {\n\t\t// \tconsole.log(`Mixin changed`);\n\t\t// } else if (maxMixin < maxSass) {\n\t\t// \tconsole.log(new Date(maxMixin), new Date(maxSass));\n\t\t// }\n\n\t\tchangeList.forEach((entry: FileStatus) => {\n\t\t\tif (basename(entry.source).startsWith(\"_\") || entry.isNewOrModified()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (maxMixin > maxSass) {\n\t\t\t\t// Mixin changed, also compile remaining sass files\n\t\t\t\twrite(entry);\n\t\t\t\ttouch(join(entry.dir, entry.source)); // In order to prevent this from happening again\n\t\t\t} else {\n\t\t\t\tprocessed.push(entry.target);\n\t\t\t}\n\t\t});\n\n\t\t// Before removing obsolete css, look at plain css that belongs in output directory\n\t\tFileUtils.getFileList(join(cfg.dirProject, cfg.options.sass.dirs.source), {\n\t\t\tallowedExtensions: [\".css\"]\n\t\t}).forEach((file: string) => {\n\t\t\tlet path = join(outDir, file);\n\t\t\tif (!test(\"-f\", path)) {\n\t\t\t\tcp(join(cfg.dirProject, cfg.options.sass.dirs.source, file), path);\n\t\t\t}\n\t\t\tprocessed.push(path);\n\t\t});\n\n\t\tremoveObsolete(cfg.options.sass.removeObsolete, processed, outDir, \".css\");\n\n\t\tif (saydHello && verbose) {\n\t\t\tlog.info(\"... done\");\n\t\t} else if (verbose) {\n\t\t\tlog.info(\"No changes in Sass files found\");\n\t\t}\n\t}\n\n\t/**\n\t * Compile Sass file, using the configuration in config.json\n\t *\n\t * @returns success\n\t */\n\tstatic compileFile(entry: FileStatus, verbose: boolean = true): boolean {\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance(cfg.options.logging);\n\t\tconst sass = require(\"node-sass\");\n\t\tlet options = cfg.options.dependencies.nodeSass.config;\n\t\tlet session = SessionVars.getInstance();\n\n\t\tif (basename(entry.source).startsWith(\"_\")) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet fullPath = join(entry.dir, entry.source);\n\t\tlet source = FileUtils.readFile(fullPath);\n\n\t\tif (cfg.options.server.beautify.includes(\"sass\")) {\n\t\t\tsource = Beautify.content(entry.source, source);\n\t\t\tif (source) {\n\t\t\t\tFileUtils.writeFile(entry.dir, entry.source, source, false);\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tObject.assign(options, {\n\t\t\tfile: join(entry.dir, entry.source),\n\t\t\toutFile: join(entry.targetDir, entry.target),\n\t\t\tsourceMap: entry.target.concat(\".map\")\n\t\t});\n\n\t\ttry {\n\t\t\tlet result = sass.renderSync(options);\n\t\t\tif (!result) {\n\t\t\t\tthrow new Error(\"\");\n\t\t\t}\n\t\t\tlet prefixed = SassUtils.addPrefixes(result.css);\n\t\t\tFileUtils.writeFile(entry.targetDir, entry.target, prefixed, verbose);\n\t\t\tsession.add(ProcessingTypes.sass, entry.target);\n\t\t} catch (err) {\n\t\t\tlog.warn(\n\t\t\t\t`- Failed to compile file: ${entry.source}`,\n\t\t\t\tLogger.error2string(err)\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"]}