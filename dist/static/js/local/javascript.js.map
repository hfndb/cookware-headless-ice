{"version":3,"sources":["javascript.ts"],"names":["cfg","AppConfig","getInstance","log","Logger","options","logging","JavascriptUtils","getOutputDir","outputDir","dirProject","javascript","dirs","output","error","bundle","outDir","nodeExec","dirMain","execPath","lst","bundles","length","apps","i","Bundle","create","push","outfile","cmd","process","env","NODE_ENV","cleanup","file","isChanged","changed","path","source","last","FileUtils","getLastModified","forEach","item","srcFile","ths","items","to","info","generateJsDocs","dependencies","jsdoc","config","dir","opts","destination","include","writeJsonFile","dirTemp","mkdir","async"],"mappings":"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","sourcesContent":["import { join } from \"path\";\nimport { cat, exec, rm, test } from \"shelljs\";\nimport { AppConfig, FileUtils, Logger } from \"../lib\";\n\nlet cfg = AppConfig.getInstance();\nlet log = Logger.getInstance(cfg.options.logging);\n\nexport class JavascriptUtils {\n\t/**\n\t * Get HTML output directory\n\t */\n\tstatic getOutputDir(): string {\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance();\n\t\tlet outputDir = \"\";\n\t\tif (test(\"-d\", join(cfg.dirProject, cfg.options.javascript.dirs.output))) {\n\t\t\t// In case of local project\n\t\t\toutputDir = join(cfg.dirProject, cfg.options.javascript.dirs.output);\n\t\t} else if (test(\"-d\", cfg.options.javascript.dirs.output)) {\n\t\t\t// In case of hosting\n\t\t\toutputDir = cfg.options.javascript.dirs.output;\n\t\t} else {\n\t\t\tlog.error(\"JavaScript output directory couldn't be determined\");\n\t\t}\n\n\t\treturn outputDir;\n\t}\n\n\t/**\n\t * Create minified JavaScript bundles\n\t *\n\t * @returns array with output files\n\t */\n\tstatic bundle(): string[] {\n\t\tlet outDir = JavascriptUtils.getOutputDir();\n\t\tlet nodeExec = join(cfg.dirMain, \"node_modules\", \"node\", \"bin\", \"node\");\n\t\tlet execPath = join(cfg.dirMain, \"dist\", \"static\", \"js\", \"local\");\n\t\tlet lst: string[] = [];\n\n\t\tif (\n\t\t\tcfg.options.javascript.bundles.length == 0 &&\n\t\t\tcfg.options.javascript.apps.length == 0\n\t\t) {\n\t\t\treturn lst;\n\t\t}\n\n\t\t// Generate bundles\n\t\tfor (let i = 0; i < cfg.options.javascript.bundles.length; i++) {\n\t\t\tlet bundle = cfg.options.javascript.bundles[i];\n\t\t\tBundle.create(bundle);\n\t\t\tlst.push(bundle.output);\n\t\t}\n\n\t\t// Generate apps\n\t\tfor (let i = 0; i < cfg.options.javascript.apps.length; i++) {\n\t\t\tlet bundle = cfg.options.javascript.apps[i];\n\t\t\tlet outfile = join(outDir, bundle.output);\n\t\t\tlst.push(bundle.output);\n\t\t\trm(\"-f\", outfile);\n\n\t\t\tlet cmd =\n\t\t\t\t`${nodeExec} ${join(execPath, \"create-app.js\")} ${cfg.dirProject}` +\n\t\t\t\t` ${i}`;\n\t\t\tif (process.env.NODE_ENV == \"production\") {\n\t\t\t\tcmd += \" 1\";\n\t\t\t}\n\t\t\texec(cmd);\n\n\t\t\t// Cleanup obsolete directories and files\n\t\t\tfor (let i = 0; bundle.cleanup && i < bundle.cleanup.length; i++) {\n\t\t\t\tlet file = join(outDir, bundle.cleanup[i]);\n\t\t\t\tif (test(\"-e\", file)) rm(\"-rf\", file); // Could be directory\n\t\t\t\tfile += \".map\";\n\t\t\t\tif (test(\"-e\", file)) rm(file); // Related source map\n\t\t\t}\n\t\t}\n\n\t\treturn lst;\n\t}\n}\n\n/**\n * Class to handle JavaScript bundles\n */\nclass Bundle {\n\t/**\n\t * Internal method to check need for writing bundle\n\t */\n\tstatic isChanged(bundle: any, outDir: string): boolean {\n\t\tif (!test(\"-f\", join(outDir, bundle.output))) return true;\n\n\t\tlet changed = false;\n\t\tlet path = join(cfg.dirProject, cfg.options.javascript.dirs.source);\n\t\tlet last = FileUtils.getLastModified(outDir, bundle.output);\n\n\t\tbundle.source.forEach((item: string) => {\n\t\t\tlet srcFile = join(path, item);\n\t\t\tlet ths = FileUtils.getLastModified(path, item);\n\t\t\tif (ths > last) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t});\n\n\t\treturn changed;\n\t}\n\n\t/**\n\t * If necessary, write bundle\n\t */\n\tstatic create(bundle: any): void {\n\t\tlet outDir = JavascriptUtils.getOutputDir();\n\t\tif (!Bundle.isChanged(bundle, outDir)) return;\n\n\t\tlet items: string[] = [];\n\t\tlet outfile = join(outDir, bundle.output);\n\t\trm(\"-f\", outfile);\n\n\t\tbundle.source.forEach((item: string) => {\n\t\t\titems.push(join(outDir, item));\n\t\t});\n\t\tcat(items).to(outfile);\n\n\t\tlog.info(`- written Javascript bundle ${bundle.output}`);\n\n\t\treturn;\n\t}\n}\n\n/**\n * Generate HTML formatted docs from JavaScript sources in src.\n * Uses configuration in config.json\n */\nexport function generateJsDocs(): void {\n\t// Make paths relative to project directory\n\tlet options: any = cfg.options.dependencies.jsdoc.config;\n\tlet dir = options.opts.destination;\n\toptions.opts.destination = join(cfg.dirProject, dir);\n\n\tfor (let i = 0; i < options.source.include.length; i++) {\n\t\toptions.source.include[i] = join(cfg.dirProject, options.source.include[i]);\n\t}\n\n\t// Write temp version of config\n\tFileUtils.writeJsonFile(options, cfg.dirTemp, \".jsdoc.json\", false);\n\n\t// Create or clean output directory\n\tif (test(\"-d\", options.opts.destination)) {\n\t\trm(\"-rf\", join(options.opts.destination, \"*\"));\n\t} else {\n\t\tFileUtils.mkdir(options.opts.destination);\n\t}\n\n\tlog.info(`Generating API docs of JavaScript files, in ${dir}`);\n\texec(`jsdoc --configure ${join(cfg.dirTemp, \".jsdoc.json\")}`, { async: true });\n}\n"]}