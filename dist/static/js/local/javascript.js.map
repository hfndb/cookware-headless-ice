{"version":3,"sources":["javascript.ts"],"names":["JavascriptUtils","getOutputDir","cfg","AppConfig","getInstance","log","Logger","outputDir","dirProject","options","javascript","dirs","output","error","bundle","minifyStream","require","logging","nodeExec","dirMain","execPath","outDir","retVal","bundles","length","apps","i","items","outfile","push","source","forEach","item","to","info","cmd","cleanup","file","generateJsDocs","dependencies","jsdoc","config","dir","opts","destination","include","FileUtils","writeJsonFile","dirTemp","mkdir","async"],"mappings":"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","sourcesContent":["import { join } from \"path\";\nimport { cat, exec, rm, test } from \"shelljs\";\nimport { AppConfig, FileUtils, Logger } from \"../lib\";\n\nexport class JavascriptUtils {\n\t/**\n\t * Get HTML output directory\n\t */\n\tstatic getOutputDir(): string {\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance();\n\t\tlet outputDir = \"\";\n\t\tif (test(\"-d\", join(cfg.dirProject, cfg.options.javascript.dirs.output))) {\n\t\t\t// In case of local project\n\t\t\toutputDir = join(cfg.dirProject, cfg.options.javascript.dirs.output);\n\t\t} else if (test(\"-d\", cfg.options.javascript.dirs.output)) {\n\t\t\t// In case of hosting\n\t\t\toutputDir = cfg.options.javascript.dirs.output;\n\t\t} else {\n\t\t\tlog.error(\"JavaScript output directory couldn't be determined\");\n\t\t}\n\n\t\treturn outputDir;\n\t}\n\n\t/**\n\t * Create minified JavaScript bundles\n\t *\n\t * @returns array with output files\n\t */\n\tstatic bundle(): string[] {\n\t\tconst minifyStream = require(\"minify-stream\");\n\t\tlet cfg = AppConfig.getInstance();\n\t\tlet log = Logger.getInstance(cfg.options.logging);\n\t\tlet nodeExec = join(cfg.dirMain, \"node_modules\", \"node\", \"bin\", \"node\");\n\t\tlet execPath = join(cfg.dirMain, \"dist\", \"static\", \"js\", \"local\");\n\t\tlet outDir = JavascriptUtils.getOutputDir();\n\t\tlet retVal: string[] = [];\n\n\t\tif (cfg.options.javascript.bundles.length == 0 && cfg.options.javascript.apps.length == 0) {\n\t\t\treturn retVal;\n\t\t}\n\n\t\t// Generate bundles\n\t\tfor (let i = 0; i < cfg.options.javascript.bundles.length; i++) {\n\t\t\tlet bundle = cfg.options.javascript.apps[i];\n\t\t\tlet items: string[] = [];\n\t\t\tlet outfile = join(outDir, bundle.output);\n\t\t\tretVal.push(bundle.output);\n\t\t\trm(\"-f\", outfile);\n\n\t\t\tbundle.source.forEach((item: string) => {\n\t\t\t\titems.push(join(outDir, item));\n\t\t\t});\n\t\t\tcat(items).to(outfile);\n\n\t\t\tlog.info(`Written Javascript bundle ${bundle.output}`);\n\t\t}\n\n\t\t// Generate apps\n\t\tfor (let i = 0; i < cfg.options.javascript.apps.length; i++) {\n\t\t\tlet bundle = cfg.options.javascript.apps[i];\n\t\t\tlet outfile = join(outDir, bundle.output);\n\t\t\tretVal.push(bundle.output);\n\t\t\trm(\"-f\", outfile);\n\n\t\t\tlet cmd = `${nodeExec} ${join(execPath, \"create-app.js\")} ${cfg.dirProject}` + ` ${i}`;\n\t\t\texec(cmd);\n\n\t\t\t// Cleanup obsolete directories and files\n\t\t\tfor (let i = 0; bundle.cleanup && i < bundle.cleanup.length; i++) {\n\t\t\t\tlet file = join(outDir, bundle.cleanup[i]);\n\t\t\t\tif (test(\"-e\", file)) rm(\"-rf\", file); // Could be directory\n\t\t\t\tfile += \".map\";\n\t\t\t\tif (test(\"-e\", file)) rm(file); // Related source map\n\t\t\t}\n\t\t}\n\n\t\treturn retVal;\n\t}\n}\n\n/**\n * Generate HTML formatted docs from JavaScript sources in src.\n * Uses configuration in config.json\n */\nexport function generateJsDocs(): void {\n\tlet cfg = AppConfig.getInstance();\n\tlet log = Logger.getInstance(cfg.options.logging);\n\n\t// Make paths relative to project directory\n\tlet options: any = cfg.options.dependencies.jsdoc.config;\n\tlet dir = options.opts.destination;\n\toptions.opts.destination = join(cfg.dirProject, dir);\n\n\tfor (let i = 0; i < options.source.include.length; i++) {\n\t\toptions.source.include[i] = join(cfg.dirProject, options.source.include[i]);\n\t}\n\n\t// Write temp version of config\n\tFileUtils.writeJsonFile(options, cfg.dirTemp, \".jsdoc.json\", false);\n\n\t// Create or clean output directory\n\tif (test(\"-d\", options.opts.destination)) {\n\t\trm(\"-rf\", join(options.opts.destination, \"*\"));\n\t} else {\n\t\tFileUtils.mkdir(options.opts.destination);\n\t}\n\n\tlog.info(`Generating API docs of JavaScript files, in ${dir}`);\n\texec(`jsdoc --configure ${join(cfg.dirTemp, \".jsdoc.json\")}`, { async: true });\n}\n"]}