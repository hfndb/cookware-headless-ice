{"version":3,"sources":["styling-test.ts"],"names":["cfg","AppConfig","getInstance","log","Logger","options","logging","session","SessionVars","useConsole","process","env","NODE_ENV","describe","it","SassUtils","compile","expected","qty","sass","get","to","equal","reset","dirProject","dirs","source"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAIA,IAAIA,GAAG,GAAGC,eAAUC,WAAV,CAAsB,uBAAtB,CAAV;;AACA,IAAIC,GAAG,GAAGC,YAAOF,WAAP,CAAmBF,GAAG,CAACK,OAAJ,CAAYC,OAA/B,CAAV;;AACAH,GAAG;;AACH,IAAII,OAAO,GAAGC,qBAAYN,WAAZ,EAAd;;AACAF,GAAG,CAACK,OAAJ,CAAYC,OAAZ,CAAoBG,UAApB,GAAiC,KAAjC;AAEAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,MAAvB;AAEAC,QAAQ,CAAC,qBAAD,EAAwB,YAAW;AAC1CC,EAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAW;AACvCC,uBAAUC,OAAV,CAAkB,KAAlB;;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,GAAG,GAAGX,OAAO,CAACY,IAAR,CAAaC,GAAb,CAAiB,KAAjB,CAAV;AACA,sBAAOF,GAAP,EAAYG,EAAZ,CAAeC,KAAf,CAAqBL,QAArB,EAA+B,SAA/B;AACAV,IAAAA,OAAO,CAACgB,KAAR;AACA,GANC,CAAF;AAQAT,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAW;AAC9C,wBAAM,gBAAKd,GAAG,CAACwB,UAAT,EAAqBxB,GAAG,CAACK,OAAJ,CAAYc,IAAZ,CAAiBM,IAAjB,CAAsBC,MAA3C,EAAmD,cAAnD,CAAN;;AACAX,uBAAUC,OAAV,CAAkB,KAAlB;;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,GAAG,GAAGX,OAAO,CAACY,IAAR,CAAaC,GAAb,CAAiB,KAAjB,CAAV;AACA,sBAAOF,GAAP,EAAYG,EAAZ,CAAeC,KAAf,CAAqBL,QAArB,EAA+B,SAA/B;AACAV,IAAAA,OAAO,CAACgB,KAAR;AACA,GAPC,CAAF;AASAT,EAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAW;AAI/D,wBAAM,gBAAKd,GAAG,CAACwB,UAAT,EAAqBxB,GAAG,CAACK,OAAJ,CAAYc,IAAZ,CAAiBM,IAAjB,CAAsBC,MAA3C,EAAmD,iBAAnD,CAAN;;AACAX,uBAAUC,OAAV,CAAkB,KAAlB;;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,GAAG,GAAGX,OAAO,CAACY,IAAR,CAAaC,GAAb,CAAiB,KAAjB,CAAV;AACA,sBAAOF,GAAP,EAAYG,EAAZ,CAAeC,KAAf,CAAqBL,QAArB,EAA+B,8EAA/B;AACAV,IAAAA,OAAO,CAACgB,KAAR;AACA,GAVC,CAAF;AAWA,CA7BO,CAAR","sourcesContent":["import { join } from \"path\";\nimport { expect } from \"chai\";\nimport { touch } from \"shelljs\";\nimport { SassUtils } from \"./styling\";\nimport { AppConfig, Logger } from \"../lib\";\nimport { SessionVars } from \"../sys/session\";\n\n// mocha -R spec --no-colors --throw-deprecation ./dist/static/js/local/styling-test.js\n\nlet cfg = AppConfig.getInstance(\"cookware-headless-ice\");\nlet log = Logger.getInstance(cfg.options.logging);\nlog; // Fool compiler - unused variable\nlet session = SessionVars.getInstance();\ncfg.options.logging.useConsole = false;\n\nprocess.env.NODE_ENV = \"test\";\n\ndescribe(\"Sass transcompiling\", function() {\n\tit(\"should compile nothing\", function() {\n\t\tSassUtils.compile(false);\n\t\tlet expected = 0;\n\t\tlet qty = session.sass.get(\"all\");\n\t\texpect(qty).to.equal(expected, \"counter\");\n\t\tsession.reset();\n\t});\n\n\tit(\"should compile 1 changed file\", function() {\n\t\ttouch(join(cfg.dirProject, cfg.options.sass.dirs.source, \"project.scss\"));\n\t\tSassUtils.compile(false);\n\t\tlet expected = 1;\n\t\tlet qty = session.sass.get(\"all\");\n\t\texpect(qty).to.equal(expected, \"counter\");\n\t\tsession.reset();\n\t});\n\n\tit(\"should compile 2 files, after changing a mixin\", function() {\n\t\t// @todo This test mysteriously fails while 'it' works perfectly in practice.\n\t\t// Even weirder: Uncommenting lines 50-54 in local/styling.ts will cause this test to succeed\n\t\t// Even weirder: No consistent test results when repeating these tests\n\t\ttouch(join(cfg.dirProject, cfg.options.sass.dirs.source, \"_variables.scss\"));\n\t\tSassUtils.compile(false); // will compile generic.scss and project.scss\n\t\tlet expected = 2;\n\t\tlet qty = session.sass.get(\"all\");\n\t\texpect(qty).to.equal(expected, \"counter (see @todo item, weird behavior demonstrating tests to be imperfect)\");\n\t\tsession.reset();\n\t});\n});\n"]}