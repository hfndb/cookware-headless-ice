{"version":3,"sources":["tags.ts"],"names":["cfg","AppConfig","getInstance","Tags","filterFlags","allowed","options","tags","styles","style","undefined","log","error","tester","RegExp","join","projectTags","FileUtils","readFile","dirProject","lines","split","fileTags","i","length","test","push","forProject","dir","active","generator","async","writeFile","forFile","file","testStr","includes"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAIA,GAAG,GAAGC,eAAUC,WAAV,EAAV;;AAEO,MAAMC,IAAN,CAAW;AACjB,SAAOC,WAAP,GAA6B;AAC5B,QAAIC,OAAO,GAAGL,GAAG,CAACM,OAAJ,CAAYC,IAAZ,CAAiBC,MAAjB,CAAwBR,GAAG,CAACM,OAAJ,CAAYC,IAAZ,CAAiBE,KAAzC,CAAd;AACA,QAAIJ,OAAO,IAAIK,SAAf,EACCC,GAAG,CAACC,KAAJ,CAAW,SAAQZ,GAAG,CAACM,OAAJ,CAAYC,IAAZ,CAAiBE,KAAM,yBAA1C;AACD,QAAII,MAAM,GAAG,IAAIC,MAAJ,CAAW,SAAST,OAAO,CAACU,IAAR,CAAa,GAAb,CAAT,GAA6B,MAAxC,EAAgD,GAAhD,CAAb;;AAEA,QAAIC,WAAW,GAAGC,eAAUC,QAAV,CAAmB,gBAAKlB,GAAG,CAACmB,UAAT,EAAqB,MAArB,CAAnB,CAAlB;;AACA,QAAIC,KAAK,GAAGJ,WAAW,CAACK,KAAZ,CAAkB,IAAlB,CAAZ;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,UAAIV,MAAM,CAACY,IAAP,CAAYL,KAAK,CAACG,CAAD,CAAjB,CAAJ,EAA2BD,QAAQ,CAACI,IAAT,CAAcN,KAAK,CAACG,CAAD,CAAnB;AAC3B;;AAED,WAAOD,QAAQ,CAACP,IAAT,CAAc,IAAd,CAAP;AACA;;AAED,SAAOY,UAAP,CAAkBC,GAAlB,EAAqC;AACpC,QAAI,CAAC5B,GAAG,CAACM,OAAJ,CAAYC,IAAZ,CAAiBsB,MAAtB,EAA8B;;AAE9B,QAAI7B,GAAG,CAACM,OAAJ,CAAYC,IAAZ,CAAiBuB,SAAjB,IAA8B,WAAlC,EAA+C;AAC9C,yBACE,MACA9B,GAAG,CAACmB,UACJ,2DAA0DS,GAAI,EAHhE,EAIC;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAJD;;AAOAd,qBAAUe,SAAV,CAAoBhC,GAAG,CAACmB,UAAxB,EAAoC,MAApC,EAA4ChB,IAAI,CAACC,WAAL,EAA5C,EAAgE,IAAhE;AACA;AACD;;AAED,SAAO6B,OAAP,CAAeC,IAAf,EAAmC;AAClC,QAAI,CAAClC,GAAG,CAACM,OAAJ,CAAYC,IAAZ,CAAiBsB,MAAtB,EAA8B;;AAE9B,QAAIb,WAAW,GAAGC,eAAUC,QAAV,CAAmB,gBAAKlB,GAAG,CAACmB,UAAT,EAAqB,MAArB,CAAnB,CAAlB;;AACA,QAAIC,KAAK,GAAGJ,WAAW,CAACK,KAAZ,CAAkB,IAAlB,CAAZ;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIa,OAAO,GAAG,OAAOD,IAArB;;AAEA,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,UAAIH,KAAK,CAACG,CAAD,CAAL,CAASa,QAAT,CAAkBD,OAAlB,CAAJ,EAAgCb,QAAQ,CAACI,IAAT,CAAcN,KAAK,CAACG,CAAD,CAAnB;AAChC;;AAEDN,mBAAUe,SAAV,CACChC,GAAG,CAACmB,UADL,EAEC,gBAAK,OAAL,EAAce,IAAd,CAFD,EAGCZ,QAAQ,CAACP,IAAT,CAAc,IAAd,CAHD,EAIC,KAJD;AAMA;;AAnDgB","sourcesContent":["import { join } from \"path\";\nimport { exec, test } from \"shelljs\";\nimport { AppConfig, FileUtils, Logger } from \"../lib\";\n\nlet cfg = AppConfig.getInstance();\n\nexport class Tags {\n\tstatic filterFlags(): string {\n\t\tlet allowed = cfg.options.tags.styles[cfg.options.tags.style];\n\t\tif (allowed == undefined)\n\t\t\tlog.error(`Style ${cfg.options.tags.style} for tags doesn't exist`);\n\t\tlet tester = new RegExp(\"\\\\b(\" + allowed.join(\"|\") + \")\\\\b\", \"i\");\n\n\t\tlet projectTags = FileUtils.readFile(join(cfg.dirProject, \"tags\"));\n\t\tlet lines = projectTags.split(\"\\n\");\n\t\tlet fileTags = [];\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tif (tester.test(lines[i])) fileTags.push(lines[i]);\n\t\t}\n\n\t\treturn fileTags.join(\"\\n\");\n\t}\n\n\tstatic forProject(dir: string): void {\n\t\tif (!cfg.options.tags.active) return;\n\n\t\tif (cfg.options.tags.generator == \"exuberant\") {\n\t\t\texec(\n\t\t\t\t`cd ${\n\t\t\t\t\tcfg.dirProject\n\t\t\t\t}; ctags-exuberant --fields=nksSaf --file-scope=yes -R ./${dir}`,\n\t\t\t\t{ async: false }\n\t\t\t);\n\n\t\t\tFileUtils.writeFile(cfg.dirProject, \"tags\", Tags.filterFlags(), true);\n\t\t}\n\t}\n\n\tstatic forFile(file: string): void {\n\t\tif (!cfg.options.tags.active) return;\n\n\t\tlet projectTags = FileUtils.readFile(join(cfg.dirProject, \"tags\"));\n\t\tlet lines = projectTags.split(\"\\n\");\n\t\tlet fileTags = [];\n\t\tlet testStr = \"./\" + file;\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tif (lines[i].includes(testStr)) fileTags.push(lines[i]);\n\t\t}\n\n\t\tFileUtils.writeFile(\n\t\t\tcfg.dirProject,\n\t\t\tjoin(\".tags\", file),\n\t\t\tfileTags.join(\"\\n\"),\n\t\t\tfalse\n\t\t);\n\t}\n}\n"]}