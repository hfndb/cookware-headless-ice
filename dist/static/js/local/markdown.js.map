{"version":3,"sources":["markdown.ts"],"names":["renderMarkdownFile","dir","path","markdown","require","setOptions","renderer","Renderer","gfm","tables","breaks","sanitize","xhtml","content","FileUtils","readFile","title","Html","getTagContent","url","replace"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAUO,SAASA,kBAAT,CAA4BC,GAA5B,EAAyCC,IAAzC,EAAiE;AACvE,QAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACAD,EAAAA,QAAQ,CAACE,UAAT,CAAoB;AACnBC,IAAAA,QAAQ,EAAE,IAAIH,QAAQ,CAACI,QAAb,EADS;AAEnBC,IAAAA,GAAG,EAAE,IAFc;AAGnBC,IAAAA,MAAM,EAAE,IAHW;AAInBC,IAAAA,MAAM,EAAE,IAJW;AAKnBC,IAAAA,QAAQ,EAAE,KALS;AAMnBC,IAAAA,KAAK,EAAE;AANY,GAApB;AAQA,MAAIC,OAAO,GAAGV,QAAQ,CAACW,eAAUC,QAAV,CAAmB,gBAAKd,GAAL,EAAUC,IAAV,CAAnB,CAAD,CAAtB;;AAEA,MAAIc,KAAK,GAAGC,aAAKC,aAAL,CAAmBL,OAAnB,EAA4B,IAA5B,EAAkC,CAAlC,CAAZ;;AACA,MAAI,CAACG,KAAL,EAAY;AACX,QAAIG,GAAG,GAAG,oBAASjB,IAAT,EAAe,KAAf,CAAV;AACAc,IAAAA,KAAK,GAAG,oBAASG,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,EAAsBA,OAAtB,CAA8B,GAA9B,EAAmC,GAAnC,CAAT,EAAkD,KAAlD,CAAR;AACA;;AAKD,SAAO,CACNP,OADM,EAENG,KAFM,CAAP;AAIA","sourcesContent":["import { basename, join } from \"path\";\nimport { FileUtils } from \"../lib\";\nimport { Html } from \"./markup\";\n\n/**\n * Read a markdown file from disk and render it to a HTML string. Markdown to markup ðŸ˜€\n *\n * @param dir aboslute dir\n * @param path request URL\n *\n * @returns array with content in 1st element, extracted title in 2nd element\n */\nexport function renderMarkdownFile(dir: string, path: string): string[] {\n\tconst markdown = require(\"marked\");\n\tmarkdown.setOptions({\n\t\trenderer: new markdown.Renderer(),\n\t\tgfm: true,\n\t\ttables: true,\n\t\tbreaks: true,\n\t\tsanitize: false,\n\t\txhtml: false\n\t});\n\tlet content = markdown(FileUtils.readFile(join(dir, path)));\n\t// Try to strip the content within h1 tags\n\tlet title = Html.getTagContent(content, \"h1\")[0];\n\tif (!title) {\n\t\tlet url = basename(path, \".md\");\n\t\ttitle = basename(url.replace(\"_\", \" \").replace(\"-\", \" \"), \".md\");\n\t}\n\n\t// Syntax comments in markdown:\n\t// [comment]: <> (some text)\n\n\treturn [\n\t\tcontent,\n\t\ttitle\n\t];\n}\n"]}