{"version":3,"sources":["index.ts"],"names":["am","AppMenu","getInstance","addOption","alias","name","type","String","description","typeLabel","checkOverridesShortcutC","Boolean","initializeNewProjectShortcutI","playgroundShortcutY","helpShortcutH","choice","getUserChoice","init","AppConfig","initNewProject","process","exit","cfg","log","Logger","options","logging","chdir","dirMain","on","err","isShuttingDown","console","error2string","stats","beautify","Beautify","standAlone","docs","javascript","compiler","config","showConfig","epub","generate","production","env","NODE_ENV","lint","Lint","content","pdf","run","touch","allow","dir","html","dirs","push","sass","source","error","FileUtils","touchRecursive","dirProject","allowedExtensions","playground","showHelp","header","hide","optionList","session","SessionVars","info","toString"],"mappings":"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","sourcesContent":["import { join } from \"path\";\nimport { Lint } from \"./local/markup\";\nimport { renderEpub } from \"./local/epub\";\nimport { FileUtils, Logger } from \"./lib\";\nimport { AppConfig, AppMenu } from \"./lib/config\";\nimport { Beautify } from \"./lib/beautify\";\nimport { generateJsDocs } from \"./local/javascript\";\nimport { generateWeb } from \"./local/misc\";\nimport { renderPdf } from \"./local/pdf\";\nimport { generateTsDocs } from \"./local/typescript\";\nimport { playGround } from \"./dev/playground\";\nimport { coatRack } from \"./server/index\";\nimport { SessionVars } from \"./sys/session\";\n\nlet am = AppMenu.getInstance();\n\n/**\n * Note for software architects and developers:\n *\n * Please read about project philosophy and related ethics in the docs, page \"Design goals and roadmap\".\n */\n\n// Define menu options\nam.addOption({\n\talias: \"b\",\n\tname: \"beautify\",\n\ttype: String,\n\tdescription:\n\t\t\"Beautifies html, js, ts or scss file - or all such files in directory\",\n\ttypeLabel: \"<path>\"\n});\nam.addOption(am.checkOverridesShortcutC);\nam.addOption({\n\talias: \"d\",\n\tname: \"docs\",\n\ttype: Boolean,\n\tdescription: \"Generate API docs for (JavaScript or TypeScript) source files\"\n});\nam.addOption({\n\talias: \"e\",\n\tname: \"epub\",\n\ttype: Boolean,\n\tdescription: \"Convert changed html files to signed ePub\"\n});\nam.addOption({\n\talias: \"g\",\n\tname: \"generate\",\n\ttype: Boolean,\n\tdescription:\n\t\t\"Transompile changed js, ts and scss, render changed .html using template engine, \\\n\t\t\tgenerate Google sitemap.\"\n});\nam.addOption(am.initializeNewProjectShortcutI);\nam.addOption({\n\talias: \"l\",\n\tname: \"lint\",\n\ttype: Boolean,\n\tdescription: \"Lint html\"\n});\nam.addOption({\n\talias: \"p\",\n\tname: \"pdf\",\n\ttype: Boolean,\n\tdescription: \"Generate pdf's based on changed html\"\n});\nam.addOption({\n\talias: \"r\",\n\tname: \"run\",\n\ttype: Boolean,\n\tdescription: \"Run local development server\"\n});\nam.addOption({\n\talias: \"t\",\n\tname: \"touch\",\n\ttype: String,\n\tdescription:\n\t\t\"Touch files recursively, in order to force regeneration of output. Valid types: content, sass, src\",\n\ttypeLabel: \"<type>\"\n});\nam.addOption({\n\tname: \"production\",\n\ttype: Boolean,\n\tdescription: \"Flag to compile and compress for production use\"\n});\nam.addOption(am.playgroundShortcutY);\nam.addOption(am.helpShortcutH);\n\nlet choice = am.getUserChoice();\n\nif (choice.init) {\n\tAppConfig.initNewProject();\n\tprocess.exit(0);\n}\n\nlet cfg = AppConfig.getInstance(\"cookware-headless-ice\");\nlet log = Logger.getInstance(cfg.options.logging);\nprocess.chdir(cfg.dirMain); // Always work from application directory\nprocess.on(\"uncaughtException\", err => {\n\tif (!log.isShuttingDown) {\n\t\tconsole.log(Logger.error2string(err));\n\t}\n});\n\nlet stats = false;\nif (choice.beautify) {\n\tBeautify.standAlone(choice.beautify);\n} else if (choice.docs && cfg.options.javascript.compiler == \"typescript\") {\n\tgenerateTsDocs();\n} else if (choice.docs) {\n\tgenerateJsDocs();\n} else if (choice.config) {\n\tAppConfig.showConfig();\n} else if (choice.epub) {\n\trenderEpub();\n} else if (choice.generate) {\n\tif (choice.production) {\n\t\tprocess.env.NODE_ENV = \"production\";\n\t}\n\tgenerateWeb(true);\n\tstats = true;\n} else if (choice.lint) {\n\tLint.content();\n} else if (choice.pdf) {\n\trenderPdf();\n} else if (choice.run) {\n\tcoatRack();\n} else if (choice.touch) {\n\tlet allow: string[] = [];\n\tlet dir = cfg.options.html.dirs.content;\n\tswitch (choice.touch) {\n\t\tcase \"content\":\n\t\t\tallow.push(\".html\");\n\t\t\tbreak;\n\n\t\tcase \"sass\":\n\t\t\tdir = cfg.options.sass.dirs.source;\n\t\t\tallow.push(\".css\", \".sass\", \".scss\");\n\t\t\tbreak;\n\n\t\tcase \"src\":\n\t\t\tdir = cfg.options.javascript.dirs.source;\n\t\t\tallow.push(\".js\", \".ts\");\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tlog.error(`Unknown type ${choice.touch}`);\n\t\t\tbreak;\n\t}\n\tFileUtils.touchRecursive(join(cfg.dirProject, dir), {\n\t\tallowedExtensions: allow\n\t});\n} else if (choice.playground) {\n\tplayGround();\n} else {\n\tam.showHelp([\n\t\t{\n\t\t\theader: \"cookware-headless-ice\",\n\t\t\tcontent: \"Utility functions\"\n\t\t},\n\t\t{\n\t\t\theader: \"Options\",\n\t\t\thide: [\"number\"],\n\t\t\toptionList: am.options\n\t\t},\n\t\t{\n\t\t\tcontent:\n\t\t\t\t\"Project home: {underline https://github.com/hfndb/cookware-headless-ice}\"\n\t\t}\n\t]);\n}\nif (stats) {\n\tlet session = SessionVars.getInstance();\n\tlog.info(session.toString());\n}\n"]}